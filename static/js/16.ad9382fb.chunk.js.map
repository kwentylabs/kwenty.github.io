{"version":3,"sources":["../node_modules/react-bootstrap/esm/Row.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/react-bootstrap/esm/OffcanvasBody.js","../node_modules/react-bootstrap/esm/OffcanvasToggling.js","../node_modules/react-bootstrap/esm/OffcanvasHeader.js","../node_modules/react-bootstrap/esm/OffcanvasTitle.js","../node_modules/react-bootstrap/esm/Offcanvas.js"],"names":["Row","React","ref","bsPrefix","className","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName","usePrevious","value","useRef","useEffect","current","dataAttr","property","dataProp","useWillUnmount","fn","onUnmount","valueRef","useUpdatedRef","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","Context","createContext","canUseDOM","window","undefined","Provider","useWindow","useContext","context","hasClass","classList","contains","baseVal","indexOf","resolveContainerRef","document","_ref","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","useState","resolvedRef","setRef","earlyRef","nextRef","node","compareDocumentPosition","propTypes","PropTypes","string","onClick","func","variant","oneOf","CloseButton","type","defaultProps","ModalContext","onHide","OPEN_DATA_ATTRIBUTE","ModalManager","handleContainerOverflow","isRTL","this","modals","defaultView","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","_modal","containerState","style","overflow","paddingProp","container","getElement","scrollBarWidth","parseInt","css","setAttribute","m","remove","removeAttribute","Object","assign","modal","modalIdx","length","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","AbstractModalHeader","closeLabel","closeVariant","closeButton","children","handleClick","useEventCallback","_jsxs","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","add","marginProp","el","adjustAndStore","restore","getSharedManager","options","activeElement","doc","active","nodeName","e","manager","_excluded","useModalManager","provided","modalManager","getManager","dialog","backdrop","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","show","role","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","isMounted","useMounted","prevShow","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","tabIndex","appear","unmountOnExit","in","backdropElement","BackdropTransition","_Fragment","ReactDOM","createPortal","Manager","createWithBsPrefix","transitionStyles","ENTERING","ENTERED","OffcanvasToggling","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","EXITING","mountOnEnter","OffcanvasHeader","DivStyledAsH5","divWithClassName","DialogTransition","Fade","Offcanvas","ariaLabelledby","placement","scroll","backdropClassName","propsManager","onToggle","NavbarContext","modalContext","useMemo","backdropProps","BaseModal","visibility","args","Body","OffcanvasBody","Header","Title","OffcanvasTitle"],"mappings":"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","file":"static/js/16.ad9382fb.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\n\nexport default function useWindow() {\n  return useContext(Context);\n}","import * as React from 'react'; // TODO: check\n\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  var _ref;\n\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('offcanvas-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.defaultProps = defaultProps;\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst OffcanvasHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nOffcanvasHeader.displayName = 'OffcanvasHeader';\nOffcanvasHeader.defaultProps = defaultProps;\nexport default OffcanvasHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH5 = divWithClassName('h5');\nexport default createWithBsPrefix('offcanvas-title', {\n  Component: DivStyledAsH5\n});","import classNames from 'classnames';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useContext, useMemo, useRef } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport NavbarContext from './NavbarContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  scroll: false,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  placement: 'start'\n};\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, { ...props\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props\n  });\n}\n\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement,\n\n  /* BaseModal props */\n  show,\n  backdrop,\n  keyboard,\n  scroll,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const {\n    onToggle\n  } = useContext(NavbarContext) || {};\n  const handleHide = useEventCallback(() => {\n    onToggle == null ? void 0 : onToggle();\n    onHide == null ? void 0 : onHide();\n  });\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n\n    return getSharedManager();\n  }\n\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null ? void 0 : onEnter(node, ...args);\n  };\n\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    ...props,\n    className: classNames(className, bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: ref,\n      backdrop: backdrop,\n      container: container,\n      keyboard: keyboard,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus && !scroll,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: onEscapeKeyDown,\n      onShow: onShow,\n      onHide: handleHide,\n      onEnter: handleEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: DialogTransition,\n      backdropTransition: BackdropTransition,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nOffcanvas.defaultProps = defaultProps;\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});"],"sourceRoot":""}