{"version":3,"sources":["components/PageTitle.js","pages/uikit/Tooltips.js"],"names":["PageTitle","props","className","title","Basic","Body","placement","overlay","id","to","Direction","map","variant","DisabledElements","disabled","style","pointerEvents","HtmlContent","Tooltips","breadCrumbItems","label","path","active","xl"],"mappings":"oHACA,iCAsBeA,IAZG,SAACC,GACf,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,qBAAKC,UAAU,iBAAf,SACI,oBAAIA,UAAU,aAAd,SAA4BD,EAAME,gB,iCCftD,6FAOMC,EAAQ,WACV,OACI,cAAC,IAAD,UACI,eAAC,IAAKC,KAAN,WACI,oBAAIH,UAAU,eAAd,sBACA,mBAAGA,UAAU,qBAAb,yDAEA,oBAAGA,UAAU,aAAb,4CACoC,IAChC,cAAC,IAAD,CAAgBI,UAAU,MAAMC,QAAS,cAAC,IAAD,CAASC,GAAG,kBAAZ,6BAAzC,SACI,cAAC,IAAD,CAAMC,GAAG,IAAT,8BACc,IAJtB,kLAOI,cAAC,IAAD,CAAgBH,UAAU,MAAMC,QAAS,cAAC,IAAD,CAASC,GAAG,kBAAZ,2BAAzC,SACI,cAAC,IAAD,CAAMC,GAAG,IAAT,wBACc,IATtB,iMAYI,cAAC,IAAD,CACIH,UAAU,MACVC,QAAS,cAAC,IAAD,CAASC,GAAG,kBAAZ,oCAFb,SAGI,cAAC,IAAD,CAAMC,GAAG,IAAT,0BAfR,gDAkBI,cAAC,IAAD,CAAgBH,UAAU,MAAMC,QAAS,cAAC,IAAD,CAASC,GAAG,kBAAZ,6BAAzC,SACI,cAAC,IAAD,CAAMC,GAAG,IAAT,gCAnBR,8DA4BVC,EAAY,WACd,OACI,cAAC,IAAD,UACI,eAAC,IAAKL,KAAN,WACI,oBAAIH,UAAU,eAAd,6BACA,mBAAGA,UAAU,qBAAb,+EAEC,CAAC,MAAO,QAAS,SAAU,QAAQS,KAAI,SAACL,GAAD,OACpC,cAAC,IAAD,CAEIA,UAAWA,EACXC,QACI,eAAC,IAAD,CAASC,GAAE,kBAAaF,GAAxB,wBACe,iCAASA,IADxB,OAJR,SAQI,eAAC,IAAD,CAAQM,QAAQ,OAAOV,UAAU,OAAjC,wBACgBI,MARXA,YAiBvBO,EAAmB,WACrB,OACI,cAAC,IAAD,UACI,eAAC,IAAKR,KAAN,WACI,oBAAIH,UAAU,eAAd,+BACA,oBAAGA,UAAU,qBAAb,+BACsB,4CADtB,2LAGmB,yCAHnB,OAG+C,0CAH/C,oBAG0F,IACtF,kDAJJ,+BAMA,cAAC,IAAD,CAAgBK,QAAS,cAAC,IAAD,CAASC,GAAG,mBAAZ,sBAAzB,SACI,sBAAMN,UAAU,iBAAhB,SACI,cAAC,IAAD,CAAQY,UAAQ,EAACC,MAAO,CAAEC,cAAe,QAAzC,uCAUlBC,EAAc,WAChB,OACI,cAAC,IAAD,UACI,eAAC,IAAKZ,KAAN,WACI,oBAAIH,UAAU,eAAd,uBACA,mBAAGA,UAAU,qBAAb,yCAEA,cAAC,IAAD,CACII,UAAU,MACVC,QACI,eAAC,IAAD,WACI,yCADJ,IACqB,qCADrB,IACiC,wCAJzC,SAOI,cAAC,IAAD,CAAQK,QAAQ,YAAhB,uCAgCLM,UAzBE,WACb,OACI,qCACI,cAAC,IAAD,CACIC,gBAAiB,CACb,CAAEC,MAAO,UAAWC,KAAM,gBAC1B,CAAED,MAAO,WAAYC,KAAM,eAAgBC,QAAQ,IAEvDnB,MAAO,aAGX,eAAC,IAAD,WACI,eAAC,IAAD,CAAKoB,GAAI,EAAT,UACI,cAACnB,EAAD,IACA,cAACS,EAAD,OAEJ,eAAC,IAAD,CAAKU,GAAI,EAAT,UACI,cAACb,EAAD,IACA,cAACO,EAAD","file":"static/js/116.0128fad2.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\ntype PageTitleProps = {\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Card, OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst Basic = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Examples</h4>\n                <p className=\"text-muted font-14\">Hover over the links below to see tooltips.</p>\n\n                <p className=\"muted mb-0\">\n                    Tight pants next level keffiyeh{' '}\n                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"overlay-example\"> Default title </Tooltip>}>\n                        <Link to=\"/\"> you probably </Link>\n                    </OverlayTrigger>{' '}\n                    haven't heard of them. Photo booth beard raw denim letterpress vegan messenger bag stumptown.\n                    Farm-to-table seitan, mcsweeney's fixie sustainable quinoa 8-bit american apparel\n                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"overlay-example\"> Another one </Tooltip>}>\n                        <Link to=\"/\"> have a </Link>\n                    </OverlayTrigger>{' '}\n                    terry richardson vinyl chambray. Beard stumptown, cardigans banh mi lomo thundercats. Tofu biodiesel\n                    williamsburg marfa, four loko mcsweeney's cleanse vegan chambray. A really ironic artisan\n                    <OverlayTrigger\n                        placement=\"top\"\n                        overlay={<Tooltip id=\"overlay-example\"> Another one here too </Tooltip>}>\n                        <Link to=\"/\"> whatever </Link>\n                    </OverlayTrigger>\n                    keytar, scenester farm-to-table banksy Austin\n                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"overlay-example\"> The last tip! </Tooltip>}>\n                        <Link to=\"/\"> twitter handle </Link>\n                    </OverlayTrigger>\n                    freegan cred raw denim single-origin coffee viral.\n                </p>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Direction = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Four Directions</h4>\n                <p className=\"text-muted font-14\">Four options are available: top, right, bottom, and left aligned.</p>\n\n                {['top', 'right', 'bottom', 'left'].map((placement) => (\n                    <OverlayTrigger\n                        key={placement}\n                        placement={placement}\n                        overlay={\n                            <Tooltip id={`tooltip-${placement}`}>\n                                Tooltip on <strong>{placement}</strong>.\n                            </Tooltip>\n                        }>\n                        <Button variant=\"info\" className=\"me-1\">\n                            Tooltip on {placement}\n                        </Button>\n                    </OverlayTrigger>\n                ))}\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst DisabledElements = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Disabled Elements</h4>\n                <p className=\"text-muted font-14\">\n                    Elements with the <code>disabled</code> attribute aren’t interactive, meaning users cannot hover or\n                    click them to trigger a popover (or tooltip). As a workaround, you’ll want to trigger the popover\n                    from a wrapper <code>&lt;div&gt;</code> or <code>&lt;span&gt;</code> and override the{' '}\n                    <code>pointer-events</code> on the disabled element.\n                </p>\n                <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Tooltip!</Tooltip>}>\n                    <span className=\"d-inline-block\">\n                        <Button disabled style={{ pointerEvents: 'none' }}>\n                            Disabled button\n                        </Button>\n                    </span>\n                </OverlayTrigger>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst HtmlContent = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Html Tags</h4>\n                <p className=\"text-muted font-14\">And with custom HTML added:</p>\n\n                <OverlayTrigger\n                    placement=\"top\"\n                    overlay={\n                        <Tooltip>\n                            <em>Tooltip</em> <u>with</u> <b>HTML</b>\n                        </Tooltip>\n                    }>\n                    <Button variant=\"secondary\">Tooltip with HTML</Button>\n                </OverlayTrigger>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Tooltips = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/tooltips' },\n                    { label: 'Tooltips', path: '/ui/tooltips', active: true },\n                ]}\n                title={'Tooltips'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <Basic />\n                    <DisabledElements />\n                </Col>\n                <Col xl={6}>\n                    <Direction />\n                    <HtmlContent />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Tooltips;\n"],"sourceRoot":""}