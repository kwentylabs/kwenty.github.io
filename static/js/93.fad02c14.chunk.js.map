{"version":3,"sources":["pages/apps/Team/data.js","pages/apps/Team/index.js","components/PageTitle.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js","components/Pagination.js","components/Table.js"],"names":["members","id","name","phone","email","location","role","created_on","status","avatar","columns","Header","accessor","sort","Cell","row","className","src","original","alt","to","classes","classNames","sizePerPageList","text","value","Team","PageTitle","title","Row","Col","xs","Card","Body","xl","Button","variant","Table","data","pageSize","isSortable","pagination","isSelectable","isSearchable","tableClass","searchBoxClass","props","_excluded","useButtonProps","tagName","disabled","href","target","rel","onClick","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","undefined","onKeyDown","key","React","_ref","ref","asProp","as","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","assign","buttonProps","Component","_jsx","displayName","bsPrefix","size","active","prefix","useBootstrapPrefix","defaultProps","Pagination","tableProps","useState","pageCount","setPageCount","state","pageIndex","setPageIndex","useEffect","filterPages","useCallback","visiblePages","totalPages","filter","page","getVisiblePages","total","changePage","setVisiblePages","gotoPage","activePage","onChange","e","setPageSize","Number","map","index","pageOptions","min","array","Fragment","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","setValue","useAsyncDebounce","placeholder","IndeterminateCheckbox","forwardRef","indeterminate","rest","defaultRef","useRef","resolvedRef","current","htmlFor","isExpandable","dataTable","useTable","initialState","useGlobalFilter","useSortBy","useExpanded","usePagination","useRowSelect","hooks","visibleColumns","push","getToggleAllPageRowsSelectedProps","getToggleRowSelectedProps","getToggleAllRowsExpandedProps","isAllRowsExpanded","canExpand","getToggleRowExpandedProps","style","paddingLeft","depth","isExpanded","rows","getTableProps","headerGroups","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","sorting_desc","isSortedDesc","sorting_asc","sortable","render","getTableBodyProps","prepareRow","getRowProps","cells","cell","getCellProps"],"mappings":"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","file":"static/js/93.fad02c14.chunk.js","sourcesContent":["const members = [\n    {\n        id: 1,\n        name: 'Abagael Breslau',\n        phone: '(461) 3636077',\n        email: 'abreslau0@wiley.com',\n        location: 'Seattle',\n        role: 'Admin',\n        created_on: '7/4/2019',\n        status: 'Active',\n        avatar: 'https://robohash.org/laborevoluptateeaque.png?size=60x60&set=set1',\n    },\n    {\n        id: 2,\n        name: 'Veradis Taber',\n        phone: '(917) 2590629',\n        email: 'vtaber1@ucoz.com',\n        location: 'Seattle',\n        role: 'Admin',\n        created_on: '7/8/2019',\n        status: 'Active',\n        avatar: 'https://robohash.org/voluptatemeligendisint.png?size=60x60&set=set1',\n    },\n    {\n        id: 3,\n        name: 'Lindon Ceeley',\n        phone: '(925) 9515307',\n        email: 'lceeley2@fotki.com',\n        location: 'Seattle',\n        role: 'User',\n        created_on: '7/20/2019',\n        status: 'Active',\n        avatar: 'https://robohash.org/etidsapiente.png?size=60x60&set=set1',\n    },\n    {\n        id: 4,\n        name: 'Mendel Alfonzo',\n        phone: '(295) 3668262',\n        email: 'malfonzo3@irs.gov',\n        location: 'Seattle',\n        role: 'User',\n        created_on: '7/22/2019',\n        status: 'Active',\n        avatar: 'https://robohash.org/pariaturharumquas.png?size=60x60&set=set1',\n    },\n    {\n        id: 5,\n        name: 'Dorrie Tindley',\n        phone: '(809) 2120936',\n        email: 'dtindley4@so-net.ne.jp',\n        location: 'Seattle',\n        role: 'User',\n        created_on: '7/14/2019',\n        status: 'Offline',\n        avatar: 'https://robohash.org/quodfugiatquae.png?size=60x60&set=set1',\n    },\n    {\n        id: 6,\n        name: 'Kata MacKnight',\n        phone: '(402) 3164595',\n        email: 'kmacknight5@boston.com',\n        location: 'Seattle',\n        role: 'User',\n        created_on: '7/10/2019',\n        status: 'Active',\n        avatar: 'https://robohash.org/sapientenonomnis.png?size=60x60&set=set1',\n    },\n    {\n        id: 7,\n        name: 'Mateo Kingzeth',\n        phone: '(941) 2564726',\n        email: 'mkingzeth6@google.com.hk',\n        location: 'Seattle',\n        role: 'User',\n        created_on: '7/18/2019',\n        status: 'Active',\n        avatar: 'https://robohash.org/autvelitest.png?size=60x60&set=set1',\n    },\n    {\n        id: 8,\n        name: 'Jayson Creaney',\n        phone: '(969) 3198297',\n        email: 'jcreaney7@netvibes.com',\n        location: 'Seattle',\n        role: 'User',\n        created_on: '7/19/2019',\n        status: 'Offline',\n        avatar: 'https://robohash.org/exsuscipitcorporis.png?size=60x60&set=set1',\n    },\n    {\n        id: 9,\n        name: 'Elita Ortmann',\n        phone: '(283) 1302865',\n        email: 'eortmann8@pinterest.com',\n        location: 'Seattle',\n        role: 'User',\n        created_on: '7/2/2019',\n        status: 'Offline',\n        avatar: 'https://robohash.org/consectetureiuset.png?size=60x60&set=set1',\n    },\n    {\n        id: 10,\n        name: 'Tyne Hollidge',\n        phone: '(529) 2241787',\n        email: 'thollidge9@ebay.co.uk',\n        location: 'Seattle',\n        role: 'User',\n        created_on: '7/11/2019',\n        status: 'Active',\n        avatar: 'https://robohash.org/aspernaturlaborumab.png?size=60x60&set=set1',\n    }\n];\n\nexport { members };","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// components\nimport PageTitle from '../../../components/PageTitle';\nimport Table from '../../../components/Table';\n\n// dummy data\nimport { members } from './data';\n\n/* name column render */\nconst NameColumn = ({ row }) => {\n    return (\n        <div className=\"table-user\">\n            <img src={row.original.avatar} alt=\"\" className=\"me-2 rounded-circle\" />\n            <Link to=\"/\" className=\"text-body fw-semibold\">\n                {row.original.name}\n            </Link>\n        </div>\n    );\n};\n\n/* status column render */\nconst StatusColumn = ({ row }) => {\n    return (\n        <>\n            <span\n                className={classNames('badge', {\n                    'badge-success-lighten': row.original.status === 'Active',\n                    'badge-secondary-lighten': row.original.status === 'Offline',\n                })}>\n                {row.original.status}\n            </span>\n        </>\n    );\n};\n\n/* action column render */\nconst ActionColumn = ({ row }) => {\n    return (\n        <>\n            <Link to=\"/\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-eye\"></i>\n            </Link>\n            <Link to=\"/\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-square-edit-outline\"></i>\n            </Link>\n            <Link to=\"/\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-delete\"></i>\n            </Link>\n        </>\n    );\n};\n\nconst columns = [\n    {\n        Header: 'Name',\n        accessor: 'name',\n        sort: true,\n        Cell: NameColumn,\n        classes: 'table-user',\n    },\n    {\n        Header: 'Phone',\n        accessor: 'phone',\n        sort: true,\n    },\n    {\n        Header: 'Email',\n        accessor: 'email',\n        sort: true,\n    },\n    {\n        Header: 'Location',\n        accessor: 'location',\n        sort: true,\n    },\n    {\n        Header: 'Role',\n        accessor: 'role',\n        sort: false,\n    },\n    {\n        Header: 'Created On',\n        accessor: 'created_on',\n        sort: true,\n    },\n    {\n        Header: 'Status',\n        accessor: 'status',\n        sort: true,\n        Cell: StatusColumn,\n    },\n    {\n        Header: 'Action',\n        accessor: 'action',\n        sort: false,\n        classes: 'table-action',\n        Cell: ActionColumn,\n    },\n];\n\nconst sizePerPageList = [\n    {\n        text: '10',\n        value: 10,\n    },\n    {\n        text: '25',\n        value: 25,\n    },\n    {\n        text: '50',\n        value: 50,\n    },\n];\n\n// main component\nconst Team = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                title={'Team'}\n            />\n\n            <Row>\n                <Col xs={12}>\n                    <Card>\n                        <Card.Body>\n                            <Row className='mb-2'>\n                                <Col xl={12}>\n                                    <div className=\"text-lg-end mt-xl-0 mt-2\">\n                                        <Button variant=\"danger\" className=\"mb-2 me-2\">\n                                            <i className=\"mdi mdi-basket me-1\"></i> Add\n                                        </Button>\n                                        <Button variant=\"light\" className=\"mb-2\">\n                                            Export\n                                        </Button>\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Table\n                                columns={columns}\n                                data={members}\n                                pageSize={10}\n                                sizePerPageList={sizePerPageList}\n                                isSortable={true}\n                                pagination={true}\n                                isSelectable={true}\n                                isSearchable={true}\n                                tableClass=\"table-striped\"\n                                searchBoxClass=\"mt-2 mb-3\"\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Team;\n","// @flow\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\ntype PageTitleProps = {\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n\n    if (disabled) {\n      href = undefined;\n    }\n  }\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","// @flow\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype PaginationProps = {\n    tableProps: any,\n    sizePerPageList: {\n        text: string,\n        value: number,\n    }[],\n};\n\nconst Pagination = ({ tableProps, sizePerPageList }: PaginationProps): React$Element<any> => {\n    /**\n     * pagination count , index\n     */\n    const [pageCount, setPageCount] = useState(tableProps.pageCount);\n    const [pageIndex, setPageIndex] = useState(tableProps.state.pageIndex);\n\n    useEffect(() => {\n        setPageCount(tableProps.pageCount);\n        setPageIndex(tableProps.state.pageIndex);\n    }, [tableProps.pageCount, tableProps.state.pageIndex]);\n\n    /**\n     * get filter pages\n     */\n    const filterPages = useCallback(\n        (visiblePages, totalPages) => {\n            return visiblePages.filter((page) => page <= pageCount);\n        },\n        [pageCount]\n    );\n\n    /**\n     * handle visible pages\n     */\n    const getVisiblePages = useCallback(\n        (page: number, total) => {\n            if (total < 7) {\n                return filterPages([1, 2, 3, 4, 5, 6], total);\n            } else {\n                if (page % 5 >= 0 && page > 4 && page + 2 < total) {\n                    return [1, page - 1, page, page + 1, total];\n                } else if (page % 5 >= 0 && page > 4 && page + 2 >= total) {\n                    return [1, total - 3, total - 2, total - 1, total];\n                } else {\n                    return [1, 2, 3, 4, 5, total];\n                }\n            }\n        },\n        [filterPages]\n    );\n\n    /**\n     * handle page change\n     * @param page - current page\n     * @returns\n     */\n    const changePage = (page) => {\n        const activePage = pageIndex + 1;\n\n        if (page === activePage) {\n            return;\n        }\n\n        const visiblePages = getVisiblePages(page, pageCount);\n        setVisiblePages(filterPages(visiblePages, pageCount));\n\n        tableProps.gotoPage(page - 1);\n    };\n\n    useEffect(() => {\n        const visiblePages = getVisiblePages(0, pageCount);\n        setVisiblePages(visiblePages);\n    }, [pageCount, getVisiblePages]);\n\n    const [visiblePages, setVisiblePages] = useState(getVisiblePages(0, pageCount));\n    const activePage = pageIndex + 1;\n\n    return (\n        <div className=\"d-lg-flex align-items-center text-center pb-1\">\n            {sizePerPageList.length > 0 && (\n                <div className=\"d-inline-block me-3\">\n                    <label className=\"me-1\">Display :</label>\n                    <select\n                        value={tableProps.state.pageSize}\n                        onChange={(e) => {\n                            tableProps.setPageSize(Number(e.target.value));\n                        }}\n                        className=\"form-select d-inline-block w-auto\">\n                        {(sizePerPageList || []).map((pageSize, index) => {\n                            return (\n                                <option key={index} value={pageSize.value}>\n                                    {pageSize.text}\n                                </option>\n                            );\n                        })}\n                    </select>\n                </div>\n            )}\n\n            <span className=\"me-3\">\n                Page{' '}\n                <strong>\n                    {pageIndex + 1} of {tableProps.pageOptions.length}\n                </strong>{' '}\n            </span>\n\n            <span className=\"d-inline-block align-items-center text-sm-start text-center my-sm-0 my-2\">\n                <label>Go to page : </label>\n                <input\n                    type=\"number\"\n                    value={pageIndex + 1}\n                    min=\"1\"\n                    onChange={(e: any) => {\n                        const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                        tableProps.gotoPage(page);\n                        setPageIndex(tableProps.state.pageIndex);\n                    }}\n                    className=\"form-control w-25 ms-1 d-inline-block\"\n                />\n            </span>\n\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0\">\n                <li\n                    key=\"prevpage\"\n                    className={classNames('page-item', 'paginate_button', 'previous', {\n                        disabled: activePage === 1,\n                    })}\n                    onClick={() => {\n                        if (activePage === 1) return;\n                        changePage(activePage - 1);\n                    }}>\n                    <Link to=\"#\" className=\"page-link\">\n                        <i className=\"mdi mdi-chevron-left\"></i>\n                    </Link>\n                </li>\n                {(visiblePages || []).map((page, index, array) => {\n                    return array[index - 1] + 1 < page ? (\n                        <React.Fragment key={page}>\n                            <li className=\"page-item disabled d-none d-xl-inline-block\">\n                                <Link to=\"#\" className=\"page-link\">\n                                    ...\n                                </Link>\n                            </li>\n                            <li\n                                className={classNames('page-item', 'd-none', 'd-xl-inline-block', {\n                                    active: activePage === page,\n                                })}\n                                onClick={(e) => changePage(page)}>\n                                <Link to=\"#\" className=\"page-link\">\n                                    {page}\n                                </Link>\n                            </li>\n                        </React.Fragment>\n                    ) : (\n                        <li\n                            key={page}\n                            className={classNames('page-item', 'd-none', 'd-xl-inline-block', {\n                                active: activePage === page,\n                            })}\n                            onClick={(e) => changePage(page)}>\n                            <Link to=\"#\" className=\"page-link\">\n                                {page}\n                            </Link>\n                        </li>\n                    );\n                })}\n                <li\n                    key=\"nextpage\"\n                    className={classNames('page-item', 'paginate_button', 'next', {\n                        disabled: activePage === tableProps.pageCount,\n                    })}\n                    onClick={() => {\n                        if (activePage === tableProps.pageCount) return;\n                        changePage(activePage + 1);\n                    }}>\n                    <Link to=\"#\" className=\"page-link\">\n                        <i className=\"mdi mdi-chevron-right\"></i>\n                    </Link>\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Pagination;\n","// @flow\nimport React, { useRef, useEffect, forwardRef } from 'react';\nimport {\n    useTable,\n    useSortBy,\n    usePagination,\n    useRowSelect,\n    useGlobalFilter,\n    useAsyncDebounce,\n    useExpanded,\n} from 'react-table';\nimport classNames from 'classnames';\n\n// components\nimport Pagination from './Pagination';\n\n// Define a default UI for filtering\nconst GlobalFilter = ({ preGlobalFilteredRows, globalFilter, setGlobalFilter, searchBoxClass }) => {\n    const count = preGlobalFilteredRows.length;\n    const [value, setValue] = React.useState(globalFilter);\n    const onChange = useAsyncDebounce((value) => {\n        setGlobalFilter(value || undefined);\n    }, 200);\n\n    return (\n        <div className={classNames(searchBoxClass)}>\n            <span className=\"d-flex align-items-center\">\n                Search :{' '}\n                <input\n                    value={value || ''}\n                    onChange={(e) => {\n                        setValue(e.target.value);\n                        onChange(e.target.value);\n                    }}\n                    placeholder={`${count} records...`}\n                    className=\"form-control w-auto ms-1\"\n                />\n            </span>\n        </div>\n    );\n};\n\nconst IndeterminateCheckbox = forwardRef(({ indeterminate, ...rest }, ref) => {\n    const defaultRef = useRef();\n    const resolvedRef: any = ref || defaultRef;\n\n    useEffect(() => {\n        resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n        <>\n            <div className=\"form-check\">\n                <input type=\"checkbox\" className=\"form-check-input\" ref={resolvedRef} {...rest} />\n                <label htmlFor=\"form-check-input\" className=\"form-check-label\"></label>\n            </div>\n        </>\n    );\n});\n\ntype TableProps = {\n    isSearchable?: boolean,\n    isSortable?: boolean,\n    pagination?: boolean,\n    isSelectable?: boolean,\n    isExpandable?: boolean,\n    pageSize: number,\n    columns: Array<any>,\n    data: Array<any>,\n    searchBoxClass?: string,\n    tableClass?: string,\n    theadClass?: string,\n    sizePerPageList: {\n        text: string,\n        value: number,\n    }[],\n};\n\nconst Table = (props: TableProps): React$Element<React$FragmentType> => {\n    const isSearchable = props['isSearchable'] || false;\n    const isSortable = props['isSortable'] || false;\n    const pagination = props['pagination'] || false;\n    const isSelectable = props['isSelectable'] || false;\n    const isExpandable = props['isExpandable'] || false;\n\n    const dataTable = useTable(\n        {\n            columns: props['columns'],\n            data: props['data'],\n            initialState: { pageSize: props['pageSize'] || 10 },\n        },\n        isSearchable && useGlobalFilter,\n        isSortable && useSortBy,\n        isExpandable && useExpanded,\n        pagination && usePagination,\n        isSelectable && useRowSelect,\n        (hooks) => {\n            isSelectable &&\n                hooks.visibleColumns.push((columns) => [\n                    // Let's make a column for selection\n                    {\n                        id: 'selection',\n                        // The header can use the table's getToggleAllRowsSelectedProps method\n                        // to render a checkbox\n                        Header: ({ getToggleAllPageRowsSelectedProps }) => (\n                            <div>\n                                <IndeterminateCheckbox {...getToggleAllPageRowsSelectedProps()} />\n                            </div>\n                        ),\n                        // The cell can use the individual row's getToggleRowSelectedProps method\n                        // to the render a checkbox\n                        Cell: ({ row }) => (\n                            <div>\n                                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n                            </div>\n                        ),\n                    },\n                    ...columns,\n                ]);\n\n            isExpandable &&\n                hooks.visibleColumns.push((columns) => [\n                    // Let's make a column for selection\n                    {\n                        // Build our expander column\n                        id: 'expander', // Make sure it has an ID\n                        Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n                            <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? '-' : '+'}</span>\n                        ),\n                        Cell: ({ row }) =>\n                            // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n                            // to build the toggle for expanding a row\n                            row.canExpand ? (\n                                <span\n                                    {...row.getToggleRowExpandedProps({\n                                        style: {\n                                            // We can even use the row.depth property\n                                            // and paddingLeft to indicate the depth\n                                            // of the row\n                                            paddingLeft: `${row.depth * 2}rem`,\n                                        },\n                                    })}>\n                                    {row.isExpanded ? '-' : '+'}\n                                </span>\n                            ) : null,\n                    },\n                    ...columns,\n                ]);\n        }\n    );\n\n    let rows = pagination ? dataTable.page : dataTable.rows;\n\n    return (\n        <>\n            {isSearchable && (\n                <GlobalFilter\n                    preGlobalFilteredRows={dataTable.preGlobalFilteredRows}\n                    globalFilter={dataTable.state.globalFilter}\n                    setGlobalFilter={dataTable.setGlobalFilter}\n                    searchBoxClass={props['searchBoxClass']}\n                />\n            )}\n\n            <div className=\"table-responsive\">\n                <table\n                    {...dataTable.getTableProps()}\n                    className={classNames('table table-centered react-table', props['tableClass'])}>\n                    <thead className={props['theadClass']}>\n                        {dataTable.headerGroups.map((headerGroup) => (\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {headerGroup.headers.map((column) => (\n                                    <th\n                                        {...column.getHeaderProps(column.sort && column.getSortByToggleProps())}\n                                        className={classNames({\n                                            sorting_desc: column.isSortedDesc === true,\n                                            sorting_asc: column.isSortedDesc === false,\n                                            sortable: column.sort === true,\n                                        })}>\n                                        {column.render('Header')}\n                                    </th>\n                                ))}\n                            </tr>\n                        ))}\n                    </thead>\n                    <tbody {...dataTable.getTableBodyProps()}>\n                        {(rows || []).map((row, i) => {\n                            dataTable.prepareRow(row);\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {row.cells.map((cell) => {\n                                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\n                                    })}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n\n            {pagination && <Pagination tableProps={dataTable} sizePerPageList={props['sizePerPageList']} />}\n        </>\n    );\n};\n\nexport default Table;\n"],"sourceRoot":""}