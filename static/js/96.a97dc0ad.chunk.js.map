{"version":3,"sources":["components/PageTitle.js","components/Datepicker.js","pages/forms/Advanced.js"],"names":["PageTitle","props","className","title","DatepickerInput","forwardRef","ref","type","onClick","value","onChange","console","log","DatepickerInputWithAddon","readOnly","HyperDatepicker","input","hideAddon","customInput","timeIntervals","tI","classNames","inputClass","selected","date","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","autoComplete","ReactSelect","Body","rel","to","pathname","target","classNamePrefix","options","label","isMulti","Typeaheads","useState","singleSelections","setSingleSelections","multiSelections","setMultiSelections","id","labelKey","multiple","placeholder","DatePickers","Date","selectedDate","setSelectedDate","onDateChange","lg","setDate","getDate","InputMasks","mask","FormAdvanced","breadCrumbItems","path","active"],"mappings":"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","file":"static/js/96.a97dc0ad.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\ntype PageTitleProps = {\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React, { forwardRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport classNames from 'classnames';\n\ntype DatepickerInputProps = {\n    onClick?: () => void,\n    value?: string,\n};\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef((props: DatepickerInputProps, ref) => {\n    const onDateValueChange = () => {\n        console.log('date value changed');\n    };\n    return (\n        <input\n            type=\"text\"\n            className=\"form-control date\"\n            onClick={props.onClick}\n            value={props.value}\n            onChange={onDateValueChange}\n            ref={ref}\n        />\n    );\n});\n\ntype DatepickerInputWithAddonProps = {\n    onClick?: () => void,\n    value?: string,\n};\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef((props: DatepickerInputWithAddonProps, ref) => (\n    <div className=\"input-group\" ref={ref}>\n        <input\n            type=\"text\"\n            className=\"form-control form-control-light\"\n            onClick={props.onClick}\n            value={props.value}\n            readOnly\n        />\n        <div className=\"input-group-append\">\n            <span className=\"input-group-text bg-primary border-primary text-white\">\n                <i className=\"mdi mdi-calendar-range font-13\"></i>\n            </span>\n        </div>\n    </div>\n));\n\ntype HyperDatepickerProps = {\n    value: Date,\n    onChange: (date: any) => void,\n    hideAddon?: boolean,\n    inputClass?: string,\n    dateFormat?: string,\n    minDate?: Date,\n    maxDate?: Date,\n    showTimeSelect?: boolean,\n    tI?: number,\n    timeCaption?: string,\n    showTimeSelectOnly?: boolean,\n    monthsShown?: number,\n    inline?: boolean,\n};\n\nconst HyperDatepicker = (props: HyperDatepickerProps): React$Element<any> => {\n    // handle custom input\n    const input = (props.hideAddon || false) === true ? <DatepickerInput /> : <DatepickerInputWithAddon />;\n\n    return (\n        <>\n            {/* date picker control */}\n            <DatePicker\n                customInput={input}\n                timeIntervals={props.tI}\n                className={classNames('form-control', props.inputClass)}\n                selected={props.value}\n                onChange={(date) => props.onChange(date)}\n                showTimeSelect={props.showTimeSelect}\n                timeFormat=\"hh:mm a\"\n                timeCaption={props.timeCaption}\n                dateFormat={props.dateFormat || 'MM/dd/yyyy'}\n                minDate={props.minDate}\n                maxDate={props.maxDate}\n                monthsShown={props.monthsShown}\n                showTimeSelectOnly={props.showTimeSelectOnly}\n                inline={props.inline}\n                autoComplete=\"off\"\n            />\n        </>\n    );\n};\n\nexport default HyperDatepicker;\n","// @flow\nimport React, { useState } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Select from 'react-select';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport MaskedInput from 'react-text-mask';\n\n// components\nimport PageTitle from '../../components/PageTitle';\nimport HyperDatepicker from '../../components/Datepicker';\n\nconst ReactSelect = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">\n                    <Link\n                        rel=\"noreferrer\"\n                        to={{ pathname: 'https://github.com/JedWatson/react-select' }}\n                        target=\"_blank\">\n                        React select\n                    </Link>\n                </h4>\n                <p className=\"mb-1 mt-3 fw-bold text-muted\">Single Selection</p>\n                <p className=\"text-muted font-14\">React-Select based Select element</p>\n                <Select\n                    className=\"react-select\"\n                    classNamePrefix=\"react-select\"\n                    options={[\n                        { value: 'chocolate', label: 'Chocolate' },\n                        { value: 'strawberry', label: 'Strawberry' },\n                        { value: 'vanilla', label: 'Vanilla' },\n                    ]}></Select>\n\n                <p className=\"mb-1 mt-3 fw-bold text-muted\">Multiple Selection</p>\n                <p className=\"text-muted font-14\">React-Select based Select (Multiple) element</p>\n                <Select\n                    isMulti={true}\n                    options={[\n                        { value: 'chocolate', label: 'Chocolate' },\n                        { value: 'strawberry', label: 'Strawberry' },\n                        { value: 'vanilla', label: 'Vanilla' },\n                    ]}\n                    className=\"react-select\"\n                    classNamePrefix=\"react-select\"></Select>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Typeaheads = () => {\n    const [singleSelections, setSingleSelections] = useState([]);\n    const [multiSelections, setMultiSelections] = useState([]);\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">\n                    <Link\n                        rel=\"noreferrer\"\n                        to={{ pathname: 'http://ericgio.github.io/react-bootstrap-typeahead/' }}\n                        target=\"_blank\">\n                        Typeahead\n                    </Link>\n                </h4>\n                <p className=\"mb-1 mt-3 fw-bold text-muted\">Single Selection</p>\n                <p className=\"text-muted font-14\">Typeahead based Select element</p>\n                <Typeahead\n                    id=\"select2\"\n                    labelKey=\"label\"\n                    multiple={false}\n                    onChange={setSingleSelections}\n                    options={[\n                        { id: 1, value: 'chocolate', label: 'Chocolate' },\n                        { id: 2, value: 'strawberry', label: 'Strawberry' },\n                        { id: 3, value: 'vanilla', label: 'Vanilla' },\n                    ]}\n                    placeholder=\"Choose a state...\"\n                    selected={singleSelections}\n                />\n\n                <p className=\"mb-1 mt-3 fw-bold text-muted\">Multiple Selection</p>\n                <p className=\"text-muted font-14\">Typeahead based Select (Multiple) element</p>\n                <Typeahead\n                    id=\"select3\"\n                    labelKey=\"label\"\n                    multiple\n                    onChange={setMultiSelections}\n                    options={[\n                        { id: 1, value: 'chocolate', label: 'Chocolate' },\n                        { id: 2, value: 'strawberry', label: 'Strawberry' },\n                        { id: 3, value: 'vanilla', label: 'Vanilla' },\n                    ]}\n                    placeholder=\"Choose a state...\"\n                    selected={multiSelections}\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst DatePickers = () => {\n    const [selectedDate, setSelectedDate] = useState(new Date());\n\n    /*\n     * handle date change\n     */\n    const onDateChange = (date) => {\n        if (date) {\n            setSelectedDate(date);\n        }\n    };\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Date &amp; Time Picker</h4>\n                <p className=\"text-muted font-14\">\n                    A simple date picker using{' '}\n                    <Link rel=\"noreferrer\" to={{ pathname: 'https://reactdatepicker.com/' }} target=\"_blank\">\n                        ReactJS Datepicker\n                    </Link>\n                </p>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label>Single Date</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label>Single Date with multiple months</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                monthsShown={2}\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"form-label\">Custom date format</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                dateFormat=\"yyyy-MM-dd\"\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label>Specific date range</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                minDate={new Date()}\n                                maxDate={new Date(new Date().setDate(new Date().getDate() + 7))}\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label>Select Time</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                showTimeSelect\n                                timeFormat=\"HH:mm\"\n                                tI={60}\n                                dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                timeCaption=\"time\"\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label>Time only</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                tI={60}\n                                dateFormat=\"h:mm aa\"\n                                timeCaption=\"Time\"\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst InputMasks = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Input Masks</h4>\n                <p className=\"text-muted font-14\">\n                    Input masks by{' '}\n                    <Link\n                        rel=\"noreferrer\"\n                        to={{ pathname: 'https://github.com/text-mask/text-mask/tree/master/react#readme' }}\n                        target=\"_blank\">\n                        react-text-mask\n                    </Link>\n                </p>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Phone Number with Area Code</label> <br />\n                            <MaskedInput\n                                mask={[\n                                    '(',\n                                    /[1-9]/,\n                                    /\\d/,\n                                    ')',\n                                    ' ',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    '-',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                ]}\n                                placeholder=\"(__) ____-____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>US Phone Number</label> <br />\n                            <MaskedInput\n                                mask={[\n                                    '(',\n                                    /[1-9]/,\n                                    /\\d/,\n                                    /\\d/,\n                                    ')',\n                                    ' ',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    '-',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                ]}\n                                placeholder=\"(___) ___-____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Date</label> <br />\n                            <MaskedInput\n                                mask={[/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]}\n                                placeholder=\"__/__/____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Time</label> <br />\n                            <MaskedInput\n                                mask={[/\\d/, /\\d/, ':', /\\d/, /\\d/, ':', /\\d/, /\\d/]}\n                                placeholder=\"__:__:__\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst FormAdvanced = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Forms', path: '/forms/advanced' },\n                    { label: 'Form Advanced', path: '/forms/advanced', active: true },\n                ]}\n                title={'Form Advanced'}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <ReactSelect />\n                </Col>\n                <Col lg={6}>\n                    <Typeaheads />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <DatePickers />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <InputMasks />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default FormAdvanced;\n"],"sourceRoot":""}