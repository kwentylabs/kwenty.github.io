{"version":3,"sources":["../node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/esm/SelectableContext.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/ui/esm/DropdownContext.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/@restart/ui/esm/NavContext.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/react-bootstrap/esm/DropdownContext.js","../node_modules/@restart/ui/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/@restart/ui/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/@restart/ui/esm/DropdownItem.js","../node_modules/@restart/ui/esm/Dropdown.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/Dropdown.js","../packages/@react-aria/ssr/src/SSRProvider.tsx"],"names":["useEventListener","eventTarget","event","listener","capture","handler","useEventCallback","useEffect","target","addEventListener","removeEventListener","usePrevious","value","ref","useRef","current","SelectableContext","React","makeEventKey","eventKey","href","String","dataAttr","property","dataProp","isReactNative","global","navigator","product","isDOM","document","useLayoutEffect","DropdownContext","WeakMap","_excluded","Anchor","_ref","onKeyDown","props","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","useButtonProps","assign","tagName","buttonProps","handleKeyDown","e","trim","role","_jsx","displayName","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","useForceUpdate","useReducer","state","NavContext","context","noop","useDropdownMenu","options","useContext","useCallbackRef","arrowElement","attachArrowRef","hasShownRef","flip","offset","rootCloseEvent","fixed","placementOverride","placement","popperConfig","enableEventListeners","usePopper","shouldUsePopper","show","handleClose","toggle","setMenu","menuElement","toggleElement","popper","mergeOptionsWithPopperConfig","enabled","enableEvents","menuProps","id","attributes","style","styles","metadata","hasShown","arrowProps","arrow","useClickOutside","clickTrigger","disabled","DropdownMenu","children","meta","_Fragment","defaultProps","useWrappedRefWithWarning","componentName","isRoleMenu","el","_el$getAttribute","getAttribute","toLowerCase","useDropdownToggle","useSSRSafeId","setToggle","handleClick","useCallback","onClick","DropdownToggle","getDropdownMenuPlacement","alignEnd","dropDirection","isRTL","bsPrefix","className","align","showProps","renderOnMount","as","Component","variant","isNavbar","NavbarContext","prefix","useBootstrapPrefix","contextAlign","drop","isInputGroup","InputGroupContext","alignClasses","brkPoint","direction","push","useMergedRefs","useIsomorphicEffect","update","close","classNames","split","childBsPrefix","Button","dropdownContext","undefined","toggleProps","useDropdownItem","active","onSelectCtx","activeKey","isActive","isPropagationStopped","DropdownItem","dropdownItemProps","useRefWithUpdate","forceUpdate","attachRef","Dropdown","defaultShow","rawShow","onSelect","rawOnToggle","onToggle","itemSelector","focusFirstItemOnShow","window","useWindow","useUncontrolledProp","menuRef","toggleRef","lastShow","lastSourceEvent","focusInDropdown","nextShow","type","originalEvent","handleSelect","useMemo","contains","ownerDocument","activeElement","focusToggle","focus","maybeFocusFirst","focusType","test","first","getNextFocusedChild","items","index","Math","max","min","_menuRef$current","_toggleRef$current","fromMenu","fromToggle","next","preventDefault","_menuRef$current2","once","stopPropagation","Provider","Menu","Toggle","Item","DropdownHeader","createWithBsPrefix","DropdownDivider","DropdownItemText","pProps","useUncontrolled","autoClose","navbar","useIsRTL","handleToggle","currentTarget","contextValue","BaseDropdown","ItemText","Divider","Header","round","random","createContext","cur","Boolean","createElement","defaultId","ctx","console","warn","isInSSRContext","isSSR","setIsSSR"],"mappings":"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","file":"static/js/4.ad7cf941.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import * as React from 'react';\nconst SelectableContext = /*#__PURE__*/React.createContext(null);\nexport const makeEventKey = (eventKey, href = null) => {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n\n  if (isTrivialHref(props.href) && !props.role || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import * as React from 'react'; // TODO: check\n\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","import * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext({});\nDropdownContext.displayName = 'DropdownContext';\nexport default DropdownContext;","const _excluded = [\"children\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useContext, useRef } from 'react';\nimport * as React from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useClickOutside from './useClickOutside';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst noop = () => {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options = {}) {\n  const context = useContext(DropdownContext);\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const hasShownRef = useRef(false);\n  const {\n    flip,\n    offset,\n    rootCloseEvent,\n    fixed = false,\n    placement: placementOverride,\n    popperConfig = {},\n    enableEventListeners = true,\n    usePopper: shouldUsePopper = !!context\n  } = options;\n  const show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  const handleClose = e => {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  const {\n    placement,\n    setMenu,\n    menuElement,\n    toggleElement\n  } = context || {};\n  const popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placementOverride || placement || 'bottom-start',\n    enabled: shouldUsePopper,\n    enableEvents: enableEventListeners == null ? show : enableEventListeners,\n    offset,\n    flip,\n    fixed,\n    arrowElement,\n    popperConfig\n  }));\n  const menuProps = Object.assign({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n  const metadata = {\n    show,\n    placement,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? Object.assign({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useClickOutside(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\nconst defaultProps = {\n  usePopper: true\n};\n\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref) {\n  let {\n    children\n  } = _ref,\n      options = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [props, meta] = useDropdownMenu(options);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\n\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  const warningRef = useCallback(refValue => {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `${componentName} injected a ref to a provided \\`as\\` component that resolved to a component instance instead of a DOM element. ` + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","import { useContext, useCallback } from 'react';\nimport * as React from 'react';\nimport { useSSRSafeId } from './ssr';\nimport DropdownContext from './DropdownContext';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const isRoleMenu = el => {\n  var _el$getAttribute;\n\n  return ((_el$getAttribute = el.getAttribute('role')) == null ? void 0 : _el$getAttribute.toLowerCase()) === 'menu';\n};\n\nconst noop = () => {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  const id = useSSRSafeId();\n  const {\n    show = false,\n    toggle = noop,\n    setToggle,\n    menuElement\n  } = useContext(DropdownContext) || {};\n  const handleClick = useCallback(e => {\n    toggle(!show, e);\n  }, [show, toggle]);\n  const props = {\n    id,\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-expanded': !!show\n  }; // This is maybe better down in an effect, but\n  // the component is going to update anyway when the menu element\n  // is set so might return new props.\n\n  if (menuElement && isRoleMenu(menuElement)) {\n    props['aria-haspopup'] = true;\n  }\n\n  return [props, {\n    show,\n    toggle\n  }];\n}\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle({\n  children\n}) {\n  const [props, meta] = useDropdownToggle();\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\n\nDropdownToggle.displayName = 'DropdownToggle';\n/** @component */\n\nexport default DropdownToggle;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownMenu } from '@restart/ui/DropdownMenu';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport DropdownContext from './DropdownContext';\nimport InputGroupContext from './InputGroupContext';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  flip: true\n};\nexport function getDropdownMenuPlacement(alignEnd, dropDirection, isRTL) {\n  const topStart = isRTL ? 'top-end' : 'top-start';\n  const topEnd = isRTL ? 'top-start' : 'top-end';\n  const bottomStart = isRTL ? 'bottom-end' : 'bottom-start';\n  const bottomEnd = isRTL ? 'bottom-start' : 'bottom-end';\n  const leftStart = isRTL ? 'right-start' : 'left-start';\n  const leftEnd = isRTL ? 'right-end' : 'left-end';\n  const rightStart = isRTL ? 'left-start' : 'right-start';\n  const rightEnd = isRTL ? 'left-end' : 'right-end';\n  let placement = alignEnd ? bottomEnd : bottomStart;\n  if (dropDirection === 'up') placement = alignEnd ? topEnd : topStart;else if (dropDirection === 'end') placement = alignEnd ? rightEnd : rightStart;else if (dropDirection === 'start') placement = alignEnd ? leftEnd : leftStart;\n  return placement;\n}\nconst DropdownMenu = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  align,\n  rootCloseEvent,\n  flip,\n  show: showProps,\n  renderOnMount,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  popperConfig,\n  variant,\n  ...props\n}, ref) => {\n  let alignEnd = false;\n  const isNavbar = useContext(NavbarContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  const {\n    align: contextAlign,\n    drop,\n    isRTL\n  } = useContext(DropdownContext);\n  align = align || contextAlign;\n  const isInputGroup = useContext(InputGroupContext);\n  const alignClasses = [];\n\n  if (align) {\n    if (typeof align === 'object') {\n      const keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n\n      if (keys.length) {\n        const brkPoint = keys[0];\n        const direction = align[brkPoint]; // .dropdown-menu-end is required for responsively aligning\n        // left in addition to align left classes.\n\n        alignEnd = direction === 'start';\n        alignClasses.push(`${prefix}-${brkPoint}-${direction}`);\n      }\n    } else if (align === 'end') {\n      alignEnd = true;\n    }\n  }\n\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const [menuProps, {\n    hasShown,\n    popper,\n    show,\n    toggle\n  }] = useDropdownMenu({\n    flip,\n    rootCloseEvent,\n    show: showProps,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    offset: [0, 2],\n    popperConfig,\n    placement\n  });\n  menuProps.ref = useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref);\n  useIsomorphicEffect(() => {\n    // Popper's initial position for the menu is incorrect when\n    // renderOnMount=true. Need to call update() to correct it.\n    if (show) popper == null ? void 0 : popper.update();\n  }, [show]);\n  if (!hasShown && !renderOnMount && !isInputGroup) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n\n    menuProps.close = () => toggle == null ? void 0 : toggle(false);\n\n    menuProps.align = align;\n  }\n\n  let style = props.style;\n\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = { ...props.style,\n      ...menuProps.style\n    };\n    props['x-placement'] = popper.placement;\n  }\n\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...menuProps,\n    style: style // Bootstrap css requires this data attrib to style responsive menus.\n    ,\n    ...((alignClasses.length || isNavbar) && {\n      'data-bs-popper': 'static'\n    }),\n    className: classNames(className, prefix, show && 'show', alignEnd && `${prefix}-end`, variant && `${prefix}-${variant}`, ...alignClasses)\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  split,\n  className,\n  childBsPrefix,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = Button,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  const isInputGroup = useContext(InputGroupContext);\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/_jsx(Component, {\n    className: classNames(className, prefix, split && `${prefix}-split`, !!isInputGroup && (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\n    ...toggleProps,\n    ...props\n  });\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","const _excluded = [\"eventKey\", \"disabled\", \"onClick\", \"active\", \"as\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport NavContext from './NavContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * Create a dropdown item. Returns a set of props for the dropdown item component\n * including an `onClick` handler that prevents selection when the item is disabled\n */\nexport function useDropdownItem({\n  key,\n  href,\n  active,\n  disabled,\n  onClick\n}) {\n  const onSelectCtx = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const {\n    activeKey\n  } = navContext || {};\n  const eventKey = makeEventKey(key, href);\n  const isActive = active == null && key != null ? makeEventKey(activeKey) === eventKey : active;\n  const handleClick = useEventCallback(event => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(event);\n\n    if (onSelectCtx && !event.isPropagationStopped()) {\n      onSelectCtx(eventKey, event);\n    }\n  });\n  return [{\n    onClick: handleClick,\n    'aria-disabled': disabled || undefined,\n    'aria-selected': isActive,\n    [dataAttr('dropdown-item')]: ''\n  }, {\n    isActive\n  }];\n}\nconst DropdownItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    eventKey,\n    disabled,\n    onClick,\n    active,\n    as: Component = Button\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [dropdownItemProps] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n    ref: ref\n  }, dropdownItemProps));\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","import qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport { useCallback, useRef, useEffect, useMemo, useContext } from 'react';\nimport * as React from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useEventListener from '@restart/hooks/useEventListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle, { isRoleMenu } from './DropdownToggle';\nimport DropdownItem from './DropdownItem';\nimport SelectableContext from './SelectableContext';\nimport { dataAttr } from './DataKey';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useRefWithUpdate() {\n  const forceUpdate = useForceUpdate();\n  const ref = useRef(null);\n  const attachRef = useCallback(element => {\n    ref.current = element; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n/**\n * @displayName Dropdown\n * @public\n */\n\n\nfunction Dropdown({\n  defaultShow,\n  show: rawShow,\n  onSelect,\n  onToggle: rawOnToggle,\n  itemSelector = `* [${dataAttr('dropdown-item')}]`,\n  focusFirstItemOnShow,\n  placement = 'bottom-start',\n  children\n}) {\n  const window = useWindow();\n  const [show, onToggle] = useUncontrolledProp(rawShow, defaultShow, rawOnToggle); // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n  const [menuRef, setMenu] = useRefWithUpdate();\n  const menuElement = menuRef.current;\n  const [toggleRef, setToggle] = useRefWithUpdate();\n  const toggleElement = toggleRef.current;\n  const lastShow = usePrevious(show);\n  const lastSourceEvent = useRef(null);\n  const focusInDropdown = useRef(false);\n  const onSelectCtx = useContext(SelectableContext);\n  const toggle = useCallback((nextShow, event, source = event == null ? void 0 : event.type) => {\n    onToggle(nextShow, {\n      originalEvent: event,\n      source\n    });\n  }, [onToggle]);\n  const handleSelect = useEventCallback((key, event) => {\n    onSelect == null ? void 0 : onSelect(key, event);\n    toggle(false, event, 'select');\n\n    if (!event.isPropagationStopped()) {\n      onSelectCtx == null ? void 0 : onSelectCtx(key, event);\n    }\n  });\n  const context = useMemo(() => ({\n    toggle,\n    placement,\n    show,\n    menuElement,\n    toggleElement,\n    setMenu,\n    setToggle\n  }), [toggle, placement, show, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(menuElement.ownerDocument.activeElement);\n  }\n\n  const focusToggle = useEventCallback(() => {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  const maybeFocusFirst = useEventCallback(() => {\n    const type = lastSourceEvent.current;\n    let focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && isRoleMenu(menuRef.current) ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    const first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(() => {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(() => {\n    lastSourceEvent.current = null;\n  });\n\n  const getNextFocusedChild = (current, offset) => {\n    if (!menuRef.current) return null;\n    const items = qsa(menuRef.current, itemSelector);\n    let index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  useEventListener(useCallback(() => window.document, [window]), 'keydown', event => {\n    var _menuRef$current, _toggleRef$current;\n\n    const {\n      key\n    } = event;\n    const target = event.target;\n    const fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    const fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target); // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    const isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu || key === 'Escape' && target.type === 'search')) {\n      return;\n    }\n\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n\n    if (key === 'Tab' && (!menuRef.current || !show)) {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n    const meta = {\n      originalEvent: event,\n      source: event.type\n    };\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          const next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          onToggle(true, meta);\n        } else {\n          const next = getNextFocusedChild(target, 1);\n          if (next && next.focus) next.focus();\n        }\n\n        return;\n\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(target.ownerDocument, 'keyup', e => {\n          var _menuRef$current2;\n\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n            onToggle(false, meta);\n          }\n        }, {\n          once: true\n        });\n        break;\n\n      case 'Escape':\n        if (key === 'Escape') {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        onToggle(false, meta);\n        break;\n\n      default:\n    }\n  });\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(DropdownContext.Provider, {\n      value: context,\n      children: children\n    })\n  });\n}\n\nDropdown.displayName = 'Dropdown';\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nDropdown.Item = DropdownItem;\nexport default Dropdown;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useDropdownItem } from '@restart/ui/DropdownItem';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  eventKey,\n  disabled = false,\n  onClick,\n  active,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  const [dropdownItemProps, meta] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...dropdownItemProps,\n    ref: ref,\n    className: classNames(className, prefix, meta.isActive && 'active', disabled && 'disabled')\n  });\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from '@restart/ui/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu, { getDropdownMenuPlacement } from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nconst DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  Component: 'hr',\n  defaultProps: {\n    role: 'separator'\n  }\n});\nconst DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nconst defaultProps = {\n  navbar: false,\n  align: 'start',\n  autoClose: true\n};\nconst Dropdown = /*#__PURE__*/React.forwardRef((pProps, ref) => {\n  const {\n    bsPrefix,\n    drop,\n    show,\n    className,\n    align,\n    onSelect,\n    onToggle,\n    focusFirstItemOnShow,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    navbar: _4,\n    autoClose,\n    ...props\n  } = useUncontrolled(pProps, {\n    show: 'onToggle'\n  });\n  const isInputGroup = useContext(InputGroupContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  const isRTL = useIsRTL();\n\n  const isClosingPermitted = source => {\n    // autoClose=false only permits close on button click\n    if (autoClose === false) return source === 'click'; // autoClose=inside doesn't permit close on rootClose\n\n    if (autoClose === 'inside') return source !== 'rootClose'; // autoClose=outside doesn't permit close on select\n\n    if (autoClose === 'outside') return source !== 'select';\n    return true;\n  };\n\n  const handleToggle = useEventCallback((nextShow, meta) => {\n    if (meta.originalEvent.currentTarget === document && (meta.source !== 'keydown' || meta.originalEvent.key === 'Escape')) meta.source = 'rootClose';\n    if (isClosingPermitted(meta.source)) onToggle == null ? void 0 : onToggle(nextShow, meta);\n  });\n  const alignEnd = align === 'end';\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const contextValue = useMemo(() => ({\n    align,\n    drop,\n    isRTL\n  }), [align, drop, isRTL]);\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(BaseDropdown, {\n      placement: placement,\n      show: show,\n      onSelect: onSelect,\n      onToggle: handleToggle,\n      focusFirstItemOnShow: focusFirstItemOnShow,\n      itemSelector: `.${prefix}-item:not(.disabled):not(:disabled)`,\n      children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, { ...props,\n        ref: ref,\n        className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'end' && 'dropend', drop === 'start' && 'dropstart')\n      })\n    })\n  });\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// We must avoid a circular dependency with @react-aria/utils, and this useLayoutEffect is\n// guarded by a check that it only runs on the client side.\n// eslint-disable-next-line rulesdir/useLayoutEffectRule\nimport React, {ReactNode, useContext, useLayoutEffect, useMemo, useState} from 'react';\n\n// To support SSR, the auto incrementing id counter is stored in a context. This allows\n// it to be reset on every request to ensure the client and server are consistent.\n// There is also a prefix string that is used to support async loading components\n// Each async boundary must be wrapped in an SSR provider, which appends to the prefix\n// and resets the current id counter. This ensures that async loaded components have\n// consistent ids regardless of the loading order.\ninterface SSRContextValue {\n  prefix: string,\n  current: number\n}\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst defaultContext: SSRContextValue = {\n  prefix: String(Math.round(Math.random() * 10000000000)),\n  current: 0\n};\n\nconst SSRContext = React.createContext<SSRContextValue>(defaultContext);\n\ninterface SSRProviderProps {\n  /** Your application here. */\n  children: ReactNode\n}\n\n/**\n * When using SSR with React Aria, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nexport function SSRProvider(props: SSRProviderProps): JSX.Element {\n  let cur = useContext(SSRContext);\n  let value: SSRContextValue = useMemo(() => ({\n    // If this is the first SSRProvider, start with an empty string prefix, otherwise\n    // append and increment the counter.\n    prefix: cur === defaultContext ? '' : `${cur.prefix}-${++cur.current}`,\n    current: 0\n  }), [cur]);\n\n  return (\n    <SSRContext.Provider value={value}>\n      {props.children}\n    </SSRContext.Provider>\n  );\n}\n\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\n/** @private */\nexport function useSSRSafeId(defaultId?: string): string {\n  let ctx = useContext(SSRContext);\n\n  // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n  // provide a warning to hint to the developer to add one.\n  if (ctx === defaultContext && !canUseDOM) {\n    console.warn('When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.');\n  }\n\n  return useMemo(() => defaultId || `react-aria${ctx.prefix}-${++ctx.current}`, [defaultId]);\n}\n\n/**\n * Returns whether the component is currently being server side rendered or\n * hydrated on the client. Can be used to delay browser-specific rendering\n * until after hydration.\n */\nexport function useIsSSR(): boolean {\n  let cur = useContext(SSRContext);\n  let isInSSRContext = cur !== defaultContext;\n  let [isSSR, setIsSSR] = useState(isInSSRContext);\n\n  // If on the client, and the component was initially server rendered,\n  // then schedule a layout effect to update the component after hydration.\n  if (typeof window !== 'undefined' && isInSSRContext) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(() => {\n      setIsSSR(false);\n    }, []);\n  }\n\n  return isSSR;\n}\n"],"sourceRoot":""}