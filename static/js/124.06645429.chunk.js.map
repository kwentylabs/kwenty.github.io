{"version":3,"sources":["components/PageTitle.js","pages/uikit/Tabs.js"],"names":["PageTitle","props","className","title","TabsExample","tabContents","id","icon","text","breadCrumbItems","label","path","active","lg","Body","Container","defaultActiveKey","variant","map","tab","index","Item","Link","as","to","eventKey","classnames","Content","Pane","sm","justify"],"mappings":"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","file":"static/js/124.06645429.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\ntype PageTitleProps = {\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Card, Tab, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst TabsExample = (): React$Element<React$FragmentType> => {\n    const tabContents = [\n        {\n            id: '1',\n            title: 'Home',\n            icon: 'mdi mdi-home-variant',\n            text: 'Home - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '2',\n            title: 'Profile',\n            icon: 'mdi mdi-account-circle',\n            text: 'Profile - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '3',\n            title: 'Settings',\n            icon: 'mdi mdi-cog-outline',\n            text: 'Settings - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n    ];\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/tabs' },\n                    { label: 'Tabs', path: '/ui/tabs', active: true },\n                ]}\n                title={'Tabs'}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Default Tabs</h4>\n                            <p className=\"text-muted font-14 mb-3\">Simple widget of tabbable panes of local content.</p>\n\n                            <Tab.Container defaultActiveKey=\"Profile\">\n                                <Nav variant=\"tabs\">\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Nav.Item key={index}>\n                                                <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                    <i\n                                                        className={classnames(\n                                                            tab.icon,\n                                                            'd-md-none',\n                                                            'd-block',\n                                                            'me-1'\n                                                        )}></i>\n                                                    <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        );\n                                    })}\n                                </Nav>\n\n                                <Tab.Content>\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                                <Row>\n                                                    <Col sm=\"12\">\n                                                        <p className=\"mt-3\">{tab.text}</p>\n                                                    </Col>\n                                                </Row>\n                                            </Tab.Pane>\n                                        );\n                                    })}\n                                </Tab.Content>\n                            </Tab.Container>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                {/* tab justified */}\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Tabs Justified</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                If you want each NavItem to be the same size use <code>justify</code>.\n                            </p>\n\n                            <Tab.Container defaultActiveKey=\"Profile\">\n                                <Nav variant=\"pills\" justify className=\"bg-nav-pills\">\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Nav.Item key={index}>\n                                                <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                    <i\n                                                        className={classnames(\n                                                            tab.icon,\n                                                            'd-md-none',\n                                                            'd-block',\n                                                            'me-1'\n                                                        )}></i>\n                                                    <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        );\n                                    })}\n                                </Nav>\n\n                                <Tab.Content>\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                                <Row>\n                                                    <Col sm=\"12\">\n                                                        <p className=\"mt-3\">{tab.text}</p>\n                                                    </Col>\n                                                </Row>\n                                            </Tab.Pane>\n                                        );\n                                    })}\n                                </Tab.Content>\n                            </Tab.Container>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            {/* vertical tab */}\n            <Row>\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Tabs Vertical Left</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                You can stack your navigation by changing the flex item direction with the{' '}\n                                <code>.flex-column</code> utility.\n                            </p>\n\n                            <Row>\n                                <Tab.Container defaultActiveKey=\"Profile\">\n                                    <Col sm={3} className=\"mb-2 mb-sm-0\">\n                                        <Nav variant=\"pills\" className=\"flex-column\">\n                                            {tabContents.map((tab, index) => {\n                                                return (\n                                                    <Nav.Item key={index}>\n                                                        <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                            <i\n                                                                className={classnames(\n                                                                    tab.icon,\n                                                                    'd-md-none',\n                                                                    'd-block',\n                                                                    'me-1'\n                                                                )}></i>\n                                                            <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                );\n                                            })}\n                                        </Nav>\n                                    </Col>\n\n                                    <Col sm={9}>\n                                        <Tab.Content>\n                                            {tabContents.map((tab, index) => {\n                                                return (\n                                                    <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                                        <Row>\n                                                            <Col sm=\"12\">\n                                                                <p className=\"mt-3\">{tab.text}</p>\n                                                            </Col>\n                                                        </Row>\n                                                    </Tab.Pane>\n                                                );\n                                            })}\n                                        </Tab.Content>\n                                    </Col>\n                                </Tab.Container>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Tabs Vertical Right</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                You can stack your navigation by changing the flex item direction with the{' '}\n                                <code>.flex-column</code> utility.\n                            </p>\n\n                            <Row>\n                                <Tab.Container defaultActiveKey=\"Profile\">\n                                    <Col sm={9}>\n                                        <Tab.Content>\n                                            {tabContents.map((tab, index) => {\n                                                return (\n                                                    <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                                        <Row>\n                                                            <Col sm=\"12\">\n                                                                <p className=\"mt-3\">{tab.text}</p>\n                                                            </Col>\n                                                        </Row>\n                                                    </Tab.Pane>\n                                                );\n                                            })}\n                                        </Tab.Content>\n                                    </Col>\n                                    <Col sm={3} className=\"mb-2 mb-sm-0\">\n                                        <Nav variant=\"pills\" className=\"flex-column\">\n                                            {tabContents.map((tab, index) => {\n                                                return (\n                                                    <Nav.Item key={index}>\n                                                        <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                            <i\n                                                                className={classnames(\n                                                                    tab.icon,\n                                                                    'd-md-none',\n                                                                    'd-block',\n                                                                    'me-1'\n                                                                )}></i>\n                                                            <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                );\n                                            })}\n                                        </Nav>\n                                    </Col>\n                                </Tab.Container>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            {/* Bordered Tabs */}\n            <Row>\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Tabs Bordered</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                The navigation item can have a simple bottom border as well. Just specify the class{' '}\n                                <code>.nav-bordered</code>.\n                            </p>\n\n                            <Tab.Container defaultActiveKey=\"Profile\">\n                                <Nav variant=\"tabs\" className=\"nav-bordered\" as=\"ul\">\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Nav.Item key={index} as=\"li\">\n                                                <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                    <i\n                                                        className={classnames(\n                                                            tab.icon,\n                                                            'd-md-none',\n                                                            'd-block',\n                                                            'me-1'\n                                                        )}></i>\n                                                    <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        );\n                                    })}\n                                </Nav>\n\n                                <Tab.Content>\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                                <Row>\n                                                    <Col sm=\"12\">\n                                                        <p className=\"mt-3\">{tab.text}</p>\n                                                    </Col>\n                                                </Row>\n                                            </Tab.Pane>\n                                        );\n                                    })}\n                                </Tab.Content>\n                            </Tab.Container>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                {/* tab justified */}\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Tabs Bordered Justified</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                The navigation item with a simple bottom border and justified.\n                            </p>\n\n                            <Tab.Container defaultActiveKey=\"Profile\">\n                                <Nav variant=\"tabs\" justify className=\"nav-bordered\" as=\"ul\">\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Nav.Item key={index} as=\"li\">\n                                                <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                    <i\n                                                        className={classnames(\n                                                            tab.icon,\n                                                            'd-md-none',\n                                                            'd-block',\n                                                            'me-1'\n                                                        )}></i>\n                                                    <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        );\n                                    })}\n                                </Nav>\n\n                                <Tab.Content>\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                                <Row>\n                                                    <Col sm=\"12\">\n                                                        <p className=\"mt-3\">{tab.text}</p>\n                                                    </Col>\n                                                </Row>\n                                            </Tab.Pane>\n                                        );\n                                    })}\n                                </Tab.Content>\n                            </Tab.Container>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default TabsExample;\n"],"sourceRoot":""}