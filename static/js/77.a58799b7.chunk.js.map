{"version":3,"sources":["components/PageTitle.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/ProgressBar.js","pages/uikit/Progress.js"],"names":["PageTitle","props","className","title","React","p","ref","_jsx","classNames","context","displayName","Row","bsPrefix","as","Component","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","CardImg","variant","prefix","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","getPercentage","now","min","max","percentage","Math","round","renderProgressBar","label","visuallyHidden","striped","animated","style","role","width","ProgressBar","isChild","wrapperProps","map","child","cloneElement","Basic","WithLabels","ScreenreaderOnlyLabel","ContextualAlternatives","Height","height","Striped","Animated","Stacked","ProgressBarExamples","breadCrumbItems","path","active","xl"],"mappings":"mHACA,iCAsBeA,IAZG,SAACC,GACf,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,qBAAKC,UAAU,iBAAf,SACI,oBAAIA,UAAU,aAAd,SAA4BD,EAAME,gB,2ECbtC,aAAAD,GAAS,OAAiBE,cAAiB,SAACC,EAAGC,GAAJ,OAAyBC,cAAK,MAAD,YAAC,eAAYF,GAAb,IACtFC,IAAKA,EACLJ,UAAWM,IAAWH,EAAEH,UAAWA,W,iCCLrC,WACMO,EAAuBL,gBAAoB,MACjDK,EAAQC,YAAc,oBACPD,O,2HCCTE,EAAmBP,cAAiB,WAMvCE,GAAQ,IALTM,EAKS,EALTA,SACAV,EAIS,EAJTA,UAIS,IAFTW,GAAIC,OAEK,MAFO,MAEP,EADNb,EACM,iBACHc,EAAoBC,YAAmBJ,EAAU,OACjDK,EAAcC,cACdC,EAAa,GAAH,OAAMJ,EAAN,SACVK,EAAU,GAiBhB,OAhBAH,EAAYI,SAAQ,SAAAC,GAClB,IAEIC,EAFEC,EAAYvB,EAAMqB,UACjBrB,EAAMqB,GAKTC,EAFa,MAAbC,GAA0C,kBAAdA,EAG1BA,EADFD,KAGKC,EAGT,IAAMC,EAAqB,OAAbH,EAAA,WAAwBA,GAAa,GACvC,MAARC,GAAcH,EAAQM,KAAR,UAAgBP,GAAhB,OAA6BM,EAA7B,YAAsCF,OAEtChB,cAAKO,EAAD,YAAC,aACvBR,IAAKA,GACFL,GAFmB,IAGtBC,UAAWM,IAAU,WAAV,GAAWN,EAAWa,GAAtB,OAA4CK,UAG3DT,EAAID,YAAc,MACHC,O,sJClCTgB,EAAuBvB,cAC7B,WAMGE,GAAQ,IALTM,EAKS,EALTA,SACAV,EAIS,EAJTA,UACA0B,EAGS,EAHTA,QAGS,IAFTf,GAAIC,OAEK,MAFO,MAEP,EADNb,EACM,iBACH4B,EAASb,YAAmBJ,EAAU,YAC5C,OAAoBL,cAAKO,EAAD,aACtBR,IAAKA,EACLJ,UAAWM,IAAWoB,EAAU,GAAH,OAAMC,EAAN,YAAgBD,GAAYC,EAAQ3B,IAC9DD,OAGP0B,EAAQjB,YAAc,UACPiB,Q,yCCdTG,EAA0B1B,cAAiB,WAM9CE,GAAQ,IALTM,EAKS,EALTA,SACAV,EAIS,EAJTA,UAIS,IAFTW,GAAIC,OAEK,MAFO,MAEP,EADNb,EACM,iBACH4B,EAASb,YAAmBJ,EAAU,eACtCmB,EAAeC,mBAAQ,iBAAO,CAClCC,mBAAoBJ,KAClB,CAACA,IACL,OAAoBtB,cAAK2B,IAAkBC,SAAU,CACnDC,MAAOL,EACPM,SAAuB9B,cAAKO,EAAD,YAAC,aAC1BR,IAAKA,GACFL,GAFsB,IAGzBC,UAAWM,IAAWN,EAAW2B,WAIvCC,EAAWpB,YAAc,aACVoB,Q,uECnBTQ,EAAgBC,YAAiB,MACjCC,EAAgBD,YAAiB,MACjCE,EAAWC,YAAmB,aAC9BC,EAAYD,YAAmB,aAAc,CACjD5B,UAAWwB,IAEPM,EAAeF,YAAmB,gBAAiB,CACvD5B,UAAW0B,IAEPK,EAAWH,YAAmB,YAAa,CAC/C5B,UAAW,MAEPgC,EAAWJ,YAAmB,YAAa,CAC/C5B,UAAW,MAEPiC,EAAaL,YAAmB,eAChCM,EAAiBN,YAAmB,oBAIpCO,EAAoB7C,cAAiB,WAWxCE,GAAQ,IAVTM,EAUS,EAVTA,SACAV,EASS,EATTA,UACAgD,EAQS,EARTA,GACAC,EAOS,EAPTA,KACAC,EAMS,EANTA,OACAC,EAKS,EALTA,KACAhB,EAIS,EAJTA,SAIS,IAFTxB,GAAIC,OAEK,MAFO,MAEP,EADNb,EACM,iBACH4B,EAASb,YAAmBJ,EAAU,QAC5C,OAAoBL,cAAKO,EAAD,YAAC,aACvBR,IAAKA,GACFL,GAFmB,IAGtBC,UAAWM,IAAWN,EAAW2B,EAAQqB,GAAM,MAAJ,OAAUA,GAAMC,GAAQ,QAAJ,OAAYA,GAAQC,GAAU,UAAJ,OAAcA,IACvGf,SAAUgB,EAAoB9C,cAAKkC,EAAU,CAC3CJ,SAAUA,IACPA,QAGTY,EAAKvC,YAAc,OACnBuC,EAAKK,aA1BgB,CACnBD,MAAM,GA0BOE,WAAOC,OAAOP,EAAM,CACjCQ,IAAK9B,EACL+B,MAAOf,EACPgB,SAAUf,EACVgB,KAAMnB,EACNoB,KAAMhB,EACNiB,KAAMhB,EACNiB,OAAQjC,EACRkC,OAAQjB,EACRkB,WAAYjB,K,sVCVd,SAASkB,EAAcC,EAAKC,EAAKC,GAC/B,IAAMC,GAAcH,EAAMC,IAAQC,EAAMD,GAAO,IAC/C,OAAOG,KAAKC,MA/CU,IA+CJF,GA/CI,IAkDxB,SAASG,EAAT,EAaGnE,GAAK,MAZN8D,EAYM,EAZNA,IACAD,EAWM,EAXNA,IACAE,EAUM,EAVNA,IACAK,EASM,EATNA,MACAC,EAQM,EARNA,eACAC,EAOM,EAPNA,QACAC,EAMM,EANNA,SACA3E,EAKM,EALNA,UACA4E,EAIM,EAJNA,MACAlD,EAGM,EAHNA,QACAhB,EAEM,EAFNA,SACGX,EACG,iBACN,OAAoBM,cAAK,MAAD,YAAC,aACvBD,IAAKA,GACFL,GAFmB,IAGtB8E,KAAM,cACN7E,UAAWM,IAAWN,EAAD,UAAeU,EAAf,yCACZgB,GAAYA,GADA,wBAEfhB,EAFe,iBAEWiE,GAFX,wBAGfjE,EAHe,gBAGUiE,GAAYD,GAHtB,IAKrBE,MAAO,aACLE,MAAO,GAAF,OAAKd,EAAcC,EAAKC,EAAKC,GAA7B,MACFS,GAEL,gBAAiBX,EACjB,gBAAiBC,EACjB,gBAAiBC,EACjBhC,SAAUsC,EAA8BpE,cAAK,OAAQ,CACnDL,UAAW,kBACXmC,SAAUqC,IACPA,KAIT,IAAMO,EAA2B7E,cAAiB,WAG/CE,GAAQ,IAFT4E,EAES,EAFTA,QACGjF,EACM,iBAGT,GAFAA,EAAMW,SAAWI,YAAmBf,EAAMW,SAAU,YAEhDsE,EACF,OAAOT,EAAkBxE,EAAOK,GAGlC,IACE8D,EAYEnE,EAZFmE,IACAD,EAWElE,EAXFkE,IACAE,EAUEpE,EAVFoE,IACAK,EASEzE,EATFyE,MACAC,EAQE1E,EARF0E,eACAC,EAOE3E,EAPF2E,QACAC,EAME5E,EANF4E,SACAjE,EAKEX,EALFW,SACAgB,EAIE3B,EAJF2B,QACA1B,EAGED,EAHFC,UACAmC,EAEEpC,EAFFoC,SACG8C,EAZL,YAaIlF,EAbJ,GAcA,OAAoBM,cAAK,MAAD,YAAC,aACvBD,IAAKA,GACF6E,GAFmB,IAGtBjF,UAAWM,IAAWN,EAAWU,GACjCyB,SAAUA,EAAW+C,YAAI/C,GAAU,SAAAgD,GAAK,OAAiBC,uBAAaD,EAAO,CAC3EH,SAAS,OACLT,EAAkB,CACtBL,MACAD,MACAE,MACAK,QACAC,iBACAC,UACAC,WACAjE,WACAgB,WACCtB,SAGP2E,EAAYvE,YAAc,cAC1BuE,EAAY3B,aA/FS,CACnBc,IAAK,EACLC,IAAK,IACLQ,UAAU,EACVK,SAAS,EACTP,gBAAgB,EAChBC,SAAS,GA0FIK,O,iCCzIf,mEAMMM,EAAQ,WACV,OACI,cAAC,IAAD,UACI,eAAC,IAAK3B,KAAN,WACI,oBAAI1D,UAAU,eAAd,sBACA,mBAAGA,UAAU,qBAAb,gGAIA,cAAC,IAAD,IACA,cAAC,IAAD,CAAaiE,IAAI,KAAKjE,UAAU,SAChC,cAAC,IAAD,CAAaiE,IAAK,GAAIjE,UAAU,SAChC,cAAC,IAAD,CAAaiE,IAAK,GAAIjE,UAAU,SAChC,cAAC,IAAD,CAAaiE,IAAI,MAAMjE,UAAU,eAM3CsF,EAAa,WACf,OACI,cAAC,IAAD,UACI,eAAC,IAAK5B,KAAN,WACI,oBAAI1D,UAAU,eAAd,oBACA,oBAAGA,UAAU,qBAAb,mBACU,yCADV,uIAKA,cAAC,IAAD,CAAaiE,IAAK,GAAIO,MAAK,cAMrCe,EAAwB,WAE1B,OACI,cAAC,IAAD,UACI,eAAC,IAAK7B,KAAN,WACI,oBAAI1D,UAAU,eAAd,qCACA,oBAAGA,UAAU,qBAAb,mBACU,kDADV,uCAIA,cAAC,IAAD,CAAaiE,IATb,GASuBO,MAAK,UAT5B,GAS4B,KAAaC,gBAAc,UAMjEe,EAAyB,WAC3B,OACI,cAAC,IAAD,UACI,eAAC,IAAK9B,KAAN,WACI,oBAAI1D,UAAU,eAAd,qCACA,mBAAGA,UAAU,qBAAb,gGAIA,cAAC,IAAD,CAAaiE,IAAK,GAAIjE,UAAU,OAAO0B,QAAQ,YAC/C,cAAC,IAAD,CAAauC,IAAK,GAAIjE,UAAU,OAAO0B,QAAQ,SAC/C,cAAC,IAAD,CAAauC,IAAK,GAAIjE,UAAU,OAAO0B,QAAQ,YAC/C,cAAC,IAAD,CAAauC,IAAK,IAAKjE,UAAU,OAAO0B,QAAQ,WAChD,cAAC,IAAD,CAAauC,IAAK,GAAIjE,UAAU,OAAO0B,QAAQ,SAC/C,cAAC,IAAD,CAAauC,IAAK,GAAIjE,UAAU,OAAO0B,QAAQ,oBAMzD+D,EAAS,WACX,OACI,cAAC,IAAD,UACI,eAAC,IAAK/B,KAAN,WACI,oBAAI1D,UAAU,eAAd,oBACA,oBAAGA,UAAU,qBAAb,2BACkB,0CADlB,iBACmD,+CADnD,2CAEc,iDAFd,8CAEoF,IAChF,gDAHJ,IAG8B,gDAH9B,IAGwD,gDAHxD,IAII,gDAJJ,eAOA,cAAC,IAAD,CAAaiE,IAAI,KAAKvC,QAAQ,SAASkD,MAAO,CAAEc,OAAQ,KACxD,cAAC,IAAD,CAAazB,IAAI,KAAKjE,UAAU,OAAO4E,MAAO,CAAEc,OAAQ,KACxD,cAAC,IAAD,CAAazB,IAAK,GAAIjE,UAAU,mBAAmB0B,QAAQ,YAC3D,cAAC,IAAD,CAAauC,IAAK,GAAIjE,UAAU,mBAAmB0B,QAAQ,SAC3D,cAAC,IAAD,CAAauC,IAAI,KAAKjE,UAAU,mBAAmB0B,QAAQ,YAC3D,cAAC,IAAD,CAAauC,IAAI,KAAKjE,UAAU,mBAAmB0B,QAAQ,kBAMrEiE,EAAU,WACZ,OACI,cAAC,IAAD,UACI,eAAC,IAAKjC,KAAN,WACI,oBAAI1D,UAAU,eAAd,qBACA,oBAAGA,UAAU,qBAAb,iBACQ,2CADR,WACoC,+CADpC,2FAKA,cAAC,IAAD,CAAaiE,IAAK,GAAIS,SAAO,IAC7B,cAAC,IAAD,CAAaT,IAAI,KAAKjE,UAAU,OAAO0B,QAAQ,UAAUgD,SAAO,IAChE,cAAC,IAAD,CAAaT,IAAK,GAAIjE,UAAU,OAAO0B,QAAQ,OAAOgD,SAAO,IAC7D,cAAC,IAAD,CAAaT,IAAK,GAAIjE,UAAU,OAAO0B,QAAQ,UAAUgD,SAAO,IAChE,cAAC,IAAD,CAAaT,IAAI,MAAMjE,UAAU,OAAO0B,QAAQ,SAASgD,SAAO,UAM1EkB,EAAW,WACb,OACI,cAAC,IAAD,UACI,eAAC,IAAKlC,KAAN,WACI,oBAAI1D,UAAU,eAAd,8BACA,oBAAGA,UAAU,qBAAb,4DACmD,4CADnD,OAC4E,+CAD5E,gEAKA,cAAC,IAAD,CAAaiE,IAAK,GAAIvC,QAAQ,UAAUiD,UAAQ,UAM1DkB,EAAU,WACZ,OACI,cAAC,IAAD,UACI,eAAC,IAAKnC,KAAN,WACI,oBAAI1D,UAAU,eAAd,qBACA,oBAAGA,UAAU,qBAAb,kBACS,mDADT,sBAGA,eAAC,IAAD,WACI,cAAC,IAAD,CAAa0E,SAAO,EAAChD,QAAQ,UAAUuC,IAAK,IAAS,GACrD,cAAC,IAAD,CAAavC,QAAQ,UAAUuC,IAAK,IAAS,GAC7C,cAAC,IAAD,CAAaS,SAAO,EAAChD,QAAQ,SAASuC,IAAK,IAAS,YAoCzD6B,UA7Ba,WACxB,OACI,qCACI,cAAC,IAAD,CACIC,gBAAiB,CACb,CAAEvB,MAAO,UAAWwB,KAAM,mBAC1B,CAAExB,MAAO,cAAewB,KAAM,kBAAmBC,QAAQ,IAE7DhG,MAAO,gBAGX,eAAC,IAAD,WACI,eAAC,IAAD,CAAKiG,GAAI,EAAT,UACI,cAACb,EAAD,IACA,cAACE,EAAD,IACA,cAACE,EAAD,IACA,cAACG,EAAD,OAEJ,eAAC,IAAD,CAAKM,GAAI,EAAT,UACI,cAACZ,EAAD,IACA,cAACE,EAAD,IACA,cAACG,EAAD,IACA,cAACE,EAAD","file":"static/js/77.a58799b7.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\ntype PageTitleProps = {\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\n\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\n\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","// @flow\nimport React from 'react';\nimport { Row, Col, Card, ProgressBar } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst Basic = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Examples</h4>\n                <p className=\"text-muted font-14\">\n                    A progressBar bar can be used to show a user how far along he/she is in a process.\n                </p>\n\n                <ProgressBar />\n                <ProgressBar now=\"25\" className=\"mt-2\" />\n                <ProgressBar now={50} className=\"mt-2\" />\n                <ProgressBar now={75} className=\"mt-2\" />\n                <ProgressBar now=\"100\" className=\"mt-2\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst WithLabels = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Labels</h4>\n                <p className=\"text-muted font-14\">\n                    Add a <code>label</code> prop to show a visible percentage. For low percentages, consider adding a\n                    min-width to ensure the label's text is fully visible.\n                </p>\n\n                <ProgressBar now={25} label={`25%`} />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst ScreenreaderOnlyLabel = () => {\n    const now = 60;\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Screenreader only label</h4>\n                <p className=\"text-muted font-14\">\n                    Add a <code>visuallyHidden</code> prop to hide the label visually.\n                </p>\n\n                <ProgressBar now={now} label={`${now}%`} visuallyHidden />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst ContextualAlternatives = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Contextual alternatives</h4>\n                <p className=\"text-muted font-14\">\n                    Progress bars use some of the same button and alert classes for consistent styles.\n                </p>\n\n                <ProgressBar now={25} className=\"mt-2\" variant=\"success\" />\n                <ProgressBar now={50} className=\"mt-2\" variant=\"info\" />\n                <ProgressBar now={75} className=\"mt-2\" variant=\"warning\" />\n                <ProgressBar now={100} className=\"mt-2\" variant=\"danger\" />\n                <ProgressBar now={65} className=\"mt-2\" variant=\"dark\" />\n                <ProgressBar now={50} className=\"mt-2\" variant=\"secondary\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Height = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Height</h4>\n                <p className=\"text-muted font-14\">\n                    We only set a <code>height</code> value on the <code>ProgressBar</code>, so if you change that value\n                    the inner <code>.progress-bar</code> will automatically resize accordingly. Use{' '}\n                    <code>.progress-sm</code>,<code>.progress-md</code>,<code>.progress-lg</code>,\n                    <code>.progress-xl</code> classes.\n                </p>\n\n                <ProgressBar now=\"25\" variant=\"danger\" style={{ height: 1 }} />\n                <ProgressBar now=\"25\" className=\"mt-2\" style={{ height: 3 }} />\n                <ProgressBar now={25} className=\"mt-2 progress-sm\" variant=\"success\" />\n                <ProgressBar now={50} className=\"mt-2 progress-md\" variant=\"info\" />\n                <ProgressBar now=\"75\" className=\"mt-2 progress-lg\" variant=\"warning\" />\n                <ProgressBar now=\"38\" className=\"mt-2 progress-xl\" variant=\"success\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Striped = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Striped</h4>\n                <p className=\"text-muted font-14\">\n                    Add <code>striped</code> to any <code>ProgressBar</code> to apply a stripe via CSS gradient over the\n                    progressBar bar’s background color.\n                </p>\n\n                <ProgressBar now={10} striped />\n                <ProgressBar now=\"25\" className=\"mt-2\" variant=\"success\" striped />\n                <ProgressBar now={50} className=\"mt-2\" variant=\"info\" striped />\n                <ProgressBar now={75} className=\"mt-2\" variant=\"warning\" striped />\n                <ProgressBar now=\"100\" className=\"mt-2\" variant=\"danger\" striped />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Animated = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Animated stripes</h4>\n                <p className=\"text-muted font-14\">\n                    The striped gradient can also be animated. Add <code>animated</code> to <code>ProgressBar</code> to\n                    animate the stripes right to left via CSS3 animations.\n                </p>\n\n                <ProgressBar now={45} variant=\"primary\" animated></ProgressBar>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Stacked = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Stacked</h4>\n                <p className=\"text-muted font-14\">\n                    Nest <code>&lt;ProgressBar /&gt;</code>s to stack them.\n                </p>\n                <ProgressBar>\n                    <ProgressBar striped variant=\"success\" now={35} key={1} />\n                    <ProgressBar variant=\"warning\" now={20} key={2} />\n                    <ProgressBar striped variant=\"danger\" now={10} key={3} />\n                </ProgressBar>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst ProgressBarExamples = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/progressBar' },\n                    { label: 'ProgressBar', path: '/ui/progressBar', active: true },\n                ]}\n                title={'ProgressBar'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <Basic />\n                    <ScreenreaderOnlyLabel />\n                    <Height />\n                    <Animated />\n                </Col>\n                <Col xl={6}>\n                    <WithLabels />\n                    <ContextualAlternatives />\n                    <Striped />\n                    <Stacked />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default ProgressBarExamples;\n"],"sourceRoot":""}