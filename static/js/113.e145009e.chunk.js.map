{"version":3,"sources":["components/PageTitle.js","pages/uikit/DragDrop.js"],"names":["PageTitle","props","className","title","Item","color","classNames","Body","DragDrop","useState","items","setItems","breadCrumbItems","label","path","active","onDragEnd","result","destination","localItems","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","index","droppableId","direction","provided","snapshot","droppableProps","ref","innerRef","map","draggableId","draggableProps","dragHandleProps","placeholder"],"mappings":"oHACA,iCAsBeA,IAZG,SAACC,GACf,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,qBAAKC,UAAU,iBAAf,SACI,oBAAIA,UAAU,aAAd,SAA4BD,EAAME,gB,sICPhDC,EAAO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACZ,OACI,cAAC,IAAD,CAAMH,UAAWI,IAAW,OAAQ,OAAQ,aAAc,MAAQD,GAAlE,SACI,cAAC,IAAKE,KAAN,UACI,6BAAYL,UAAU,sBAAtB,UACI,sHACA,wDACsB,sBAAMC,MAAM,eAAZ,qCA2F3BK,UApEE,WACb,MAA0BC,mBAAS,CAAC,UAAW,UAAW,OAAQ,WAAlE,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OACI,qCACI,cAAC,IAAD,CACIC,gBAAiB,CACb,CAAEC,MAAO,cAAeC,KAAM,gBAC9B,CAAED,MAAO,gBAAiBC,KAAM,eAAgBC,QAAQ,IAE5DZ,MAAO,kBAGX,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAiBa,UArBf,SAACC,GAEf,GAAKA,EAAOC,YAAZ,CAIA,IAAMC,EAtBE,SAACC,EAAMC,EAAYC,GAC/B,IAAML,EAASM,MAAMC,KAAKJ,GAC1B,EAAkBH,EAAOQ,OAAOJ,EAAY,GAArCK,EAAP,oBAGA,OAFAT,EAAOQ,OAAOH,EAAU,EAAGI,GAEpBT,EAiBgBU,CAAQjB,EAAOO,EAAOW,OAAOC,MAAOZ,EAAOC,YAAYW,OAC1ElB,EAASQ,KAcG,SACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAKZ,KAAN,UACI,cAAC,IAAD,CAAWuB,YAAY,YAAYC,UAAU,aAA7C,SACK,SAACC,EAAUC,GAAX,OACG,gDAASD,EAASE,gBAAlB,IAAkCC,IAAKH,EAASI,SAAhD,UACI,oBAAIlC,UAAU,eAAd,0CACA,mBAAGA,UAAU,qBAAb,2CACA,sBAAKA,UAAU,SAAf,UACKQ,EAAM2B,KAAI,SAAChC,EAAOwB,GAAR,OACP,cAAC,IAAD,CAAuBS,YAAajC,EAAOwB,MAAOA,EAAlD,SACK,SAACG,EAAUC,GAAX,OACG,yDACI/B,UAAU,OACViC,IAAKH,EAASI,UACVJ,EAASO,gBACTP,EAASQ,iBAJjB,aAKI,cAACpC,EAAD,CAAMC,MAAOA,SAPTA,MAYnB2B,EAASS","file":"static/js/113.e145009e.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\ntype PageTitleProps = {\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React, { useState } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport classNames from 'classnames';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst Item = ({ color }) => {\n    return (\n        <Card className={classNames('mb-0', 'mt-3', 'text-white', 'bg-' + color)}>\n            <Card.Body>\n                <blockquote className=\"card-bodyquote mb-0\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\n                    <footer>\n                        Someone famous in <cite title=\"Source Title\">Source Title</cite>\n                    </footer>\n                </blockquote>\n            </Card.Body>\n        </Card>\n    );\n};\n\n/**\n * Reorders the list\n * @param {*} list\n * @param {*} startIndex\n * @param {*} endIndex\n */\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n// DragDrop\nconst DragDrop = (): React$Element<React$FragmentType> => {\n    const [items, setItems] = useState(['primary', 'success', 'info', 'danger']);\n\n    /**\n     * On drag ends\n     * @param {3} result\n     */\n    const onDragEnd = (result) => {\n        // dropped outside the list\n        if (!result.destination) {\n            return;\n        }\n\n        const localItems = reorder(items, result.source.index, result.destination.index);\n        setItems(localItems);\n    };\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Extended UI', path: '/ui/dragdrop' },\n                    { label: 'Drag and Drop', path: '/ui/dragdrop', active: true },\n                ]}\n                title={'Drag and Drop'}\n            />\n\n            <Row>\n                <Col>\n                    <DragDropContext onDragEnd={onDragEnd}>\n                        <Row>\n                            <Col>\n                                <Card>\n                                    <Card.Body>\n                                        <Droppable droppableId=\"droppable\" direction=\"horizontal\">\n                                            {(provided, snapshot) => (\n                                                <div {...provided.droppableProps} ref={provided.innerRef}>\n                                                    <h4 className=\"header-title\">Simple Drag and Drop Example</h4>\n                                                    <p className=\"text-muted font-14\">Drag and drop cards in a list</p>\n                                                    <div className=\"d-flex\">\n                                                        {items.map((color, index) => (\n                                                            <Draggable key={color} draggableId={color} index={index}>\n                                                                {(provided, snapshot) => (\n                                                                    <div\n                                                                        className=\"me-2\"\n                                                                        ref={provided.innerRef}\n                                                                        {...provided.draggableProps}\n                                                                        {...provided.dragHandleProps}>\n                                                                        <Item color={color} />\n                                                                    </div>\n                                                                )}\n                                                            </Draggable>\n                                                        ))}\n                                                        {provided.placeholder}\n                                                    </div>\n                                                </div>\n                                            )}\n                                        </Droppable>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </DragDropContext>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default DragDrop;\n"],"sourceRoot":""}