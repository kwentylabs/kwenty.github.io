{"version":3,"sources":["../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-table/index.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../../src/plugin-hooks/useGridLayout.js"],"names":["useCommittedRef","value","ref","useRef","useEffect","current","useEventCallback","fn","useCallback","apply","arguments","useEventListener","eventTarget","event","listener","capture","handler","target","addEventListener","removeEventListener","useMounted","mounted","isMounted","useCallbackRef","useState","usePrevious","className","React","p","_jsx","classNames","WeakMap","_excluded","Anchor","_ref","href","onKeyDown","props","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","useButtonProps","assign","tagName","buttonProps","handleKeyDown","e","trim","role","displayName","disabled","rel","onClick","tabIndex","type","meta","handleClick","isTrivialHref","preventDefault","stopPropagation","undefined","Button","asProp","as","Component","context","isReactNative","global","navigator","product","isDOM","document","useLayoutEffect","Row","bsPrefix","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","BreadcrumbItem","active","children","linkAs","LinkComponent","linkProps","title","prefix","defaultProps","Breadcrumb","listProps","label","Item","CardImg","variant","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","module","exports","require","actions","init","defaultRenderer","emptyRenderer","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","next","style","makePropGetter","hooks","userProps","prev","handlePropGetter","prevProps","Array","isArray","reduceHooks","initial","allowUndefined","loopHooks","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","safeUseLayoutEffect","useMountedLayoutEffect","deps","mountedRef","makeRenderer","instance","column","Comp","console","info","Error","flexRender","component","proto","getPrototypeOf","prototype","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","String","d","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","row","error","decorateColumn","userDefaultColumn","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","a","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","checked","isVisible","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","isAllRowsExpanded","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","b","from","Set","size","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValuesByColumnID","row1","row2","toString","isNaN","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","alower","blower","replaceNonNumeric","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","touch","cancelable","events","passiveIfSupported","supported","options","window","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","w","columnIndex","elWidth","getElementById","offsetWidth","startingWidth","newWidth","columnWidthsCopy","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","userColumns","getStateReducer","s","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups"],"mappings":"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","file":"static/js/7.ed97b329.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n\n  if (isTrivialHref(props.href) && !props.role || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n\n    if (disabled) {\n      href = undefined;\n    }\n  }\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","export function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: `grid`,\n      gridTemplateColumns: instance.state.gridLayout.columnWidths.map(w => w).join(` `),\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky` //enables a scroll wrapper to be placed around the table and have sticky headers\n    },\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === `init`) {\n    return {\n      gridLayout: {\n        columnWidths: instance.columns.map(() => `auto`),\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === `columnStartResizing`) {\n    const { columnId } = action\n    const columnIndex = instance.visibleColumns.findIndex(col => col.id === columnId)\n    const elWidth = getElementWidth(columnId)\n\n    if (elWidth !== undefined) {\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          columnId,\n          columnIndex,\n          startingWidth: elWidth\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === `columnResizing`) {\n    const {\n      columnIndex,\n      startingWidth,\n      columnWidths,\n    } = state.gridLayout\n\n    const change = state.columnResizing.startX - action.clientX\n    const newWidth = startingWidth - change\n    const columnWidthsCopy = [...columnWidths]\n    columnWidthsCopy[columnIndex] = `${newWidth}px`\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: columnWidthsCopy,\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}"],"sourceRoot":""}