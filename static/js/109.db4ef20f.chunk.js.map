{"version":3,"sources":["components/PageTitle.js","pages/uikit/Accordions.js"],"names":["PageTitle","props","className","title","CustomToggle","children","eventKey","containerClass","linkClass","callback","activeEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionButton","isCurrentEventKey","to","classNames","collapsed","onClick","CustomAccordion1","item","index","Header","String","Collapse","Body","CustomAccordion2","text","Accordions","useState","isOpen","setIsOpen","isOpenFirst","setIsOpenFirst","isOpenSecond","setIsOpenSecond","toggle","breadCrumbItems","label","path","active","xl","rel","pathname","target","defaultActiveKey","id","map","color","type","in","variant"],"mappings":"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","file":"static/js/109.db4ef20f.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\ntype PageTitleProps = {\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React, { useContext, useState } from 'react';\nimport { Row, Col, Card, Accordion, Button, Collapse, useAccordionButton, AccordionContext } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\ntype CustomToggleProps = {\n    children: any,\n    eventKey: string,\n    containerClass: string,\n    linkClass: string,\n    callback?: any,\n};\n\nconst CustomToggle = ({ children, eventKey, containerClass, linkClass, callback }: CustomToggleProps) => {\n    const { activeEventKey } = useContext(AccordionContext);\n\n    const decoratedOnClick = useAccordionButton(eventKey, () => callback && callback(eventKey));\n\n    const isCurrentEventKey = activeEventKey === eventKey;\n\n    return (\n        <h5 className={containerClass}>\n            <Link\n                to=\"#\"\n                className={classNames(linkClass, {\n                    collapsed: !isCurrentEventKey,\n                })}\n                onClick={decoratedOnClick}>\n                {children}\n            </Link>\n        </h5>\n    );\n};\n\nconst CustomAccordion1 = ({ item, index }) => {\n    return (\n        <Card className=\"mb-0\">\n            <Card.Header>\n                <CustomToggle\n                    eventKey={String(index)}\n                    containerClass=\"m-0\"\n                    linkClass=\"custom-accordion-title d-block pt-2 pb-2\">\n                    Collapsible Group Item #{item}\n                </CustomToggle>\n            </Card.Header>\n            <Accordion.Collapse eventKey={String(index)}>\n                <div>\n                    <Card.Body>\n                        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid.\n                        3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt\n                        laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin\n                        coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes\n                        anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings\n                        occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard\n                        of them accusamus labore sustainable VHS.\n                    </Card.Body>\n                </div>\n            </Accordion.Collapse>\n        </Card>\n    );\n};\n\nconst CustomAccordion2 = ({ item, index }) => {\n    return (\n        <Card className=\"mb-0\">\n            <Card.Header>\n                <CustomToggle\n                    eventKey={String(index)}\n                    containerClass=\"m-0\"\n                    linkClass=\"custom-accordion-title d-block py-1\">\n                    Q. {item.title}\n                    <i className=\"mdi mdi-chevron-down accordion-arrow\"></i>\n                </CustomToggle>\n            </Card.Header>\n            <Accordion.Collapse eventKey={String(index)}>\n                <div>\n                    <Card.Body>{item.text}</Card.Body>\n                </div>\n            </Accordion.Collapse>\n        </Card>\n    );\n};\n\nconst Accordions = (): React$Element<React$FragmentType> => {\n    const accordianContent = [\n        {\n            id: 1,\n            title: 'Can I use this template for my client?',\n            text: ' Yup, the marketplace license allows you to use this theme in any end products. For more information on licenses, please refere',\n        },\n        {\n            id: 2,\n            title: 'Can this theme work with Wordpress?',\n            text: \"No. This is a HTML template. It won't directly with wordpress, though you can convert this into wordpress compatible theme\",\n        },\n        {\n            id: 3,\n            title: 'How do I get help with the theme?',\n            text: '   Use our dedicated support email (support@coderthemes.com) to send your issues or feedback. We are here to help anytime',\n        },\n        {\n            id: 4,\n            title: 'Will you regularly give updates of UBold ?',\n            text: 'Yes, We will update the UBold regularly. All the future updates would be available without any cost',\n        },\n    ];\n\n    const [isOpen, setIsOpen] = useState(true);\n    const [isOpenFirst, setIsOpenFirst] = useState(true);\n    const [isOpenSecond, setIsOpenSecond] = useState(true);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    const toggleFirst = () => setIsOpenFirst(!isOpenFirst);\n\n    const toggleSecond = () => setIsOpenSecond(!isOpenSecond);\n\n    const toggleBoth = () => {\n        setIsOpenFirst(!isOpenFirst);\n        setIsOpenSecond(!isOpenSecond);\n    };\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/accordions' },\n                    { label: 'Accordions', path: '/ui/accordions', active: true },\n                ]}\n                title={'Accordions'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Simple Accordions</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                Use <code>Collapse</code> component to create accordions. The details documentation is\n                                available{' '}\n                                <Link\n                                    rel=\"noreferrer\"\n                                    to={{ pathname: 'https://react-bootstrap-v5.netlify.app/utilities/transitions/' }}\n                                    target=\"_blank\">\n                                    here\n                                </Link>\n                                .\n                            </p>\n\n                            <Accordion defaultActiveKey=\"0\" id=\"accordion\" className=\"mb-3\">\n                                {(['1', '2', '3'] || []).map((item, index) => {\n                                    return <CustomAccordion1 key={index} item={item} index={index} />;\n                                })}\n                            </Accordion>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Custom Accordions</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                You can have custom look and feel for accorion as well. Just use class{' '}\n                                <code>.custom-accordion</code> along with\n                                <code>.accordion</code> as a wrapper.\n                            </p>\n\n                            <Accordion defaultActiveKey=\"0\" id=\"accordion\" className=\"custom-accordion\">\n                                {(accordianContent || []).map((item, index) => {\n                                    return <CustomAccordion2 key={index} item={item} index={index} />;\n                                })}\n                            </Accordion>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Collapse</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                Collapse provides the way to toggle the visibility of any content or element.\n                            </p>\n                            <p>\n                                <Link to=\"#\" className=\"btn btn-primary\" onClick={toggle}>\n                                    Link with href\n                                </Link>\n\n                                <Button color=\"primary\" className=\"ms-1\" type=\"button\" onClick={toggle}>\n                                    Button with data-target\n                                </Button>\n                            </p>\n                            <Collapse in={isOpen}>\n                                <div>\n                                    <div className=\"card card-body mb-0\">\n                                        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry\n                                        richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes\n                                        anderson cred nesciunt sapiente ea proident.\n                                    </div>\n                                </div>\n                            </Collapse>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Multiple Targets</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                Multiple <code>Button</code> or <code>Link</code> can show and hide an element.\n                            </p>\n                            <p>\n                                <Link to=\"#\" className=\"btn btn-primary\" onClick={toggleFirst}>\n                                    Toggle first element\n                                </Link>\n\n                                <Button variant=\"primary\" className=\"ms-1\" type=\"button\" onClick={toggleSecond}>\n                                    Toggle second element\n                                </Button>\n\n                                <Button variant=\"primary\" className=\"ms-1\" type=\"button\" onClick={toggleBoth}>\n                                    Toggle both elements\n                                </Button>\n                            </p>\n                            <Row>\n                                <Col>\n                                    <Collapse in={isOpenFirst}>\n                                        <div>\n                                            <div className=\"card card-body mb-0\">\n                                                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus\n                                                terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer\n                                                labore wes anderson cred nesciunt sapiente ea proident.\n                                            </div>\n                                        </div>\n                                    </Collapse>\n                                </Col>\n                                <Col>\n                                    <Collapse in={isOpenSecond}>\n                                        <div>\n                                            <div className=\"card card-body mb-0\">\n                                                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus\n                                                terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer\n                                                labore wes anderson cred nesciunt sapiente ea proident.\n                                            </div>\n                                        </div>\n                                    </Collapse>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Accordions;\n"],"sourceRoot":""}