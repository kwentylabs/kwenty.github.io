{"version":3,"sources":["components/PageTitle.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/react-bootstrap/esm/helpers.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/hooks/esm/useTimeout.js","../node_modules/react-bootstrap/esm/PopoverHeader.js","../node_modules/react-bootstrap/esm/PopoverBody.js","../node_modules/react-bootstrap/esm/Popover.js","../node_modules/@restart/ui/esm/useRootClose.js","../node_modules/@restart/ui/esm/Overlay.js","../node_modules/react-bootstrap/esm/Overlay.js","../node_modules/react-bootstrap/esm/useOverlayOffset.js","../node_modules/react-bootstrap/esm/OverlayTrigger.js","pages/uikit/Popovers.js"],"names":["PageTitle","props","className","title","Row","React","ref","bsPrefix","as","Component","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName","_createSuper","Derived","hasNativeReflectConstruct","result","Super","NewTarget","this","constructor","Reflect","construct","arguments","apply","_isNativeReflectConstruct","sham","Proxy","Boolean","prototype","valueOf","call","e","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","getOverlayDirection","placement","isRTL","bsDirection","hasClass","element","classList","contains","baseVal","indexOf","resolveContainerRef","document","_ref","canUseDOM","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","window","useWindow","useState","resolvedRef","setRef","earlyRef","nextRef","MAX_DELAY_MS","Math","pow","setChainedTimeout","handleRef","timeoutAtMs","delayMs","Date","now","setTimeout","useTimeout","isMounted","useMounted","clearTimeout","useMemo","clear","set","createWithBsPrefix","Popover","style","children","arrowProps","popper","show","useIsRTL","split","primaryPlacement","_jsxs","role","PopoverBody","defaultProps","Object","assign","Header","PopoverHeader","Body","POPPER_OFFSET","noop","useRootClose","onRootClose","disabled","clickTrigger","onClose","useClickOutside","handleKeyUp","useEventCallback","keyCode","doc","getRefTarget","currentEvent","defaultView","event","removeKeyupListener","listen","undefined","Overlay","outerRef","flip","offset","containerPadding","popperConfig","Transition","transition","useCallbackRef","rootElement","attachRef","arrowElement","attachArrowRef","mergedRef","useMergedRefs","container","target","exited","setExited","usePopper","mergeOptionsWithPopperConfig","enableEvents","mountOverlay","onHide","rootClose","rootCloseDisabled","rootCloseEvent","child","attributes","styles","arrow","onExit","onExiting","onEnter","onEntering","onEntered","in","appear","onExited","ReactDOM","createPortal","Fade","overlay","outerProps","popperRef","customOffset","overlayRef","popoverClass","name","options","useOverlayOffset","modifiers","actualTransition","BaseOverlay","concat","overlayProps","_popperObj$state","_popperObj$state$modi","popperObj","aRef","__wrapped","r","safeFindDOMNode","wrapRefs","updatedPlacement","state","scheduleUpdate","update","outOfBoundaries","modifiersData","hide","isReferenceHidden","handleMouseOverOut","handler","args","relatedNative","currentTarget","related","relatedTarget","nativeEvent","OverlayTrigger","trigger","propsShow","defaultShow","onToggle","propsDelay","delay","triggerNodeRef","timeout","hoverStateRef","useUncontrolledProp","setShow","normalizeDelay","only","onFocus","onBlur","onClick","handleShow","useCallback","handleHide","handleFocus","handleBlur","handleClick","handleMouseOver","handleMouseOut","triggers","triggerProps","onMouseOver","onMouseOut","_Fragment","cloneElement","Basic","popover","id","variant","Direction","map","DimissibleOnClick","DisabledPopover","pointerEvents","HoverPopover","Popovers","breadCrumbItems","label","path","active","xl"],"mappings":"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","file":"static/js/63.2062ed8a.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\ntype PageTitleProps = {\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import * as React from 'react';\nexport class BsPrefixComponent extends React.Component {} // Need to use this instead of typeof Component to get proper type checking.\n\nexport function getOverlayDirection(placement, isRTL) {\n  let bsDirection = placement;\n\n  if (placement === 'left') {\n    bsDirection = isRTL ? 'end' : 'start';\n  } else if (placement === 'right') {\n    bsDirection = isRTL ? 'start' : 'end';\n  }\n\n  return bsDirection;\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  var _ref;\n\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { useMemo, useRef } from 'react';\nimport useMounted from './useMounted';\nimport useWillUnmount from './useWillUnmount';\n/*\n * Browsers including Internet Explorer, Chrome, Safari, and Firefox store the\n * delay as a 32-bit signed integer internally. This causes an integer overflow\n * when using delays larger than 2,147,483,647 ms (about 24.8 days),\n * resulting in the timeout being executed immediately.\n *\n * via: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\n */\n\nvar MAX_DELAY_MS = Math.pow(2, 31) - 1;\n\nfunction setChainedTimeout(handleRef, fn, timeoutAtMs) {\n  var delayMs = timeoutAtMs - Date.now();\n  handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(function () {\n    return setChainedTimeout(handleRef, fn, timeoutAtMs);\n  }, MAX_DELAY_MS);\n}\n/**\n * Returns a controller object for setting a timeout that is properly cleaned up\n * once the component unmounts. New timeouts cancel and replace existing ones.\n *\n *\n *\n * ```tsx\n * const { set, clear } = useTimeout();\n * const [hello, showHello] = useState(false);\n * //Display hello after 5 seconds\n * set(() => showHello(true), 5000);\n * return (\n *   <div className=\"App\">\n *     {hello ? <h3>Hello</h3> : null}\n *   </div>\n * );\n * ```\n */\n\n\nexport default function useTimeout() {\n  var isMounted = useMounted(); // types are confused between node and web here IDK\n\n  var handleRef = useRef();\n  useWillUnmount(function () {\n    return clearTimeout(handleRef.current);\n  });\n  return useMemo(function () {\n    var clear = function clear() {\n      return clearTimeout(handleRef.current);\n    };\n\n    function set(fn, delayMs) {\n      if (delayMs === void 0) {\n        delayMs = 0;\n      }\n\n      if (!isMounted()) return;\n      clear();\n\n      if (delayMs <= MAX_DELAY_MS) {\n        // For simplicity, if the timeout is short, just set a normal timeout.\n        handleRef.current = setTimeout(fn, delayMs);\n      } else {\n        setChainedTimeout(handleRef, fn, Date.now() + delayMs);\n      }\n    }\n\n    return {\n      set: set,\n      clear: clear\n    };\n  }, []);\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('popover-header');","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('popover-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport PopoverHeader from './PopoverHeader';\nimport PopoverBody from './PopoverBody';\nimport { getOverlayDirection } from './helpers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  placement: 'right'\n};\nconst Popover = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  placement,\n  className,\n  style,\n  children,\n  body,\n  arrowProps,\n  popper: _,\n  show: _1,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'popover');\n  const isRTL = useIsRTL();\n  const [primaryPlacement] = (placement == null ? void 0 : placement.split('-')) || [];\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    role: \"tooltip\",\n    style: style,\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, decoratedBsPrefix, primaryPlacement && `bs-popover-${bsDirection}`),\n    ...props,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"popover-arrow\",\n      ...arrowProps\n    }), body ? /*#__PURE__*/_jsx(PopoverBody, {\n      children: children\n    }) : children]\n  });\n});\nPopover.defaultProps = defaultProps;\nexport default Object.assign(Popover, {\n  Header: PopoverHeader,\n  Body: PopoverBody,\n  // Default popover offset.\n  // https://github.com/twbs/bootstrap/blob/5c32767e0e0dbac2d934bcdee03719a65d3f1187/js/src/popover.js#L28\n  POPPER_OFFSET: [0, 8]\n});","import listen from 'dom-helpers/listen';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport { useEffect } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useClickOutside, { getRefTarget } from './useClickOutside';\nconst escapeKeyCode = 27;\n\nconst noop = () => {};\n\n/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useRootClose(ref, onRootClose, {\n  disabled,\n  clickTrigger\n} = {}) {\n  const onClose = onRootClose || noop;\n  useClickOutside(ref, onClose, {\n    disabled,\n    clickTrigger\n  });\n  const handleKeyUp = useEventCallback(e => {\n    if (e.keyCode === escapeKeyCode) {\n      onClose(e);\n    }\n  });\n  useEffect(() => {\n    if (disabled || ref == null) return undefined;\n    const doc = ownerDocument(getRefTarget(ref)); // Store the current event to avoid triggering handlers immediately\n    // https://github.com/facebook/react/issues/20074\n\n    let currentEvent = (doc.defaultView || window).event;\n    const removeKeyupListener = listen(doc, 'keyup', e => {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleKeyUp(e);\n    });\n    return () => {\n      removeKeyupListener();\n    };\n  }, [ref, disabled, handleKeyUp]);\n}\n\nexport default useRootClose;","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { useState } from 'react';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * Built on top of `Popper.js`, the overlay component is\n * great for custom tooltip overlays.\n */\nconst Overlay = /*#__PURE__*/React.forwardRef((props, outerRef) => {\n  const {\n    flip,\n    offset,\n    placement,\n    containerPadding,\n    popperConfig = {},\n    transition: Transition\n  } = props;\n  const [rootElement, attachRef] = useCallbackRef();\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(attachRef, outerRef);\n  const container = useWaitForDOMRef(props.container);\n  const target = useWaitForDOMRef(props.target);\n  const [exited, setExited] = useState(!props.show);\n  const popper = usePopper(target, rootElement, mergeOptionsWithPopperConfig({\n    placement,\n    enableEvents: !!props.show,\n    containerPadding: containerPadding || 5,\n    flip,\n    offset,\n    arrowElement,\n    popperConfig\n  }));\n\n  if (props.show) {\n    if (exited) setExited(false);\n  } else if (!props.transition && !exited) {\n    setExited(true);\n  }\n\n  const handleHidden = (...args) => {\n    setExited(true);\n\n    if (props.onExited) {\n      props.onExited(...args);\n    }\n  }; // Don't un-render the overlay while it's transitioning out.\n\n\n  const mountOverlay = props.show || Transition && !exited;\n  useRootClose(rootElement, props.onHide, {\n    disabled: !props.rootClose || props.rootCloseDisabled,\n    clickTrigger: props.rootCloseEvent\n  });\n\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n\n  let child = props.children(Object.assign({}, popper.attributes.popper, {\n    style: popper.styles.popper,\n    ref: mergedRef\n  }), {\n    popper,\n    placement,\n    show: !!props.show,\n    arrowProps: Object.assign({}, popper.attributes.arrow, {\n      style: popper.styles.arrow,\n      ref: attachArrowRef\n    })\n  });\n\n  if (Transition) {\n    const {\n      onExit,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = props;\n    child = /*#__PURE__*/_jsx(Transition, {\n      in: props.show,\n      appear: true,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: child\n    });\n  }\n\n  return container ? /*#__PURE__*/ReactDOM.createPortal(child, container) : null;\n});\nOverlay.displayName = 'Overlay';\nexport default Overlay;","import * as React from 'react';\nimport { useRef } from 'react';\nimport classNames from 'classnames';\nimport BaseOverlay from '@restart/ui/Overlay';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useOverlayOffset from './useOverlayOffset';\nimport Fade from './Fade';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  transition: Fade,\n  rootClose: false,\n  show: false,\n  placement: 'top'\n};\n\nfunction wrapRefs(props, arrowProps) {\n  const {\n    ref\n  } = props;\n  const {\n    ref: aRef\n  } = arrowProps;\n\n  props.ref = ref.__wrapped || (ref.__wrapped = r => ref(safeFindDOMNode(r)));\n\n  arrowProps.ref = aRef.__wrapped || (aRef.__wrapped = r => aRef(safeFindDOMNode(r)));\n}\n\nconst Overlay = /*#__PURE__*/React.forwardRef(({\n  children: overlay,\n  transition,\n  popperConfig = {},\n  ...outerProps\n}, outerRef) => {\n  const popperRef = useRef({});\n  const [ref, modifiers] = useOverlayOffset(outerProps.offset);\n  const mergedRef = useMergedRefs(outerRef, ref);\n  const actualTransition = transition === true ? Fade : transition || undefined;\n  return /*#__PURE__*/_jsx(BaseOverlay, { ...outerProps,\n    ref: mergedRef,\n    popperConfig: { ...popperConfig,\n      modifiers: modifiers.concat(popperConfig.modifiers || [])\n    },\n    transition: actualTransition,\n    children: (overlayProps, {\n      arrowProps,\n      popper: popperObj,\n      show\n    }) => {\n      var _popperObj$state, _popperObj$state$modi;\n\n      wrapRefs(overlayProps, arrowProps); // Need to get placement from popper object, handling case when overlay is flipped using 'flip' prop\n\n      const updatedPlacement = popperObj == null ? void 0 : popperObj.placement;\n      const popper = Object.assign(popperRef.current, {\n        state: popperObj == null ? void 0 : popperObj.state,\n        scheduleUpdate: popperObj == null ? void 0 : popperObj.update,\n        placement: updatedPlacement,\n        outOfBoundaries: (popperObj == null ? void 0 : (_popperObj$state = popperObj.state) == null ? void 0 : (_popperObj$state$modi = _popperObj$state.modifiersData.hide) == null ? void 0 : _popperObj$state$modi.isReferenceHidden) || false\n      });\n      if (typeof overlay === 'function') return overlay({ ...overlayProps,\n        placement: updatedPlacement,\n        show,\n        ...(!transition && show && {\n          className: 'show'\n        }),\n        popper,\n        arrowProps\n      });\n      return /*#__PURE__*/React.cloneElement(overlay, { ...overlayProps,\n        placement: updatedPlacement,\n        arrowProps,\n        popper,\n        className: classNames(overlay.props.className, !transition && show && 'show'),\n        style: { ...overlay.props.style,\n          ...overlayProps.style\n        }\n      });\n    }\n  });\n});\nOverlay.displayName = 'Overlay';\nOverlay.defaultProps = defaultProps;\nexport default Overlay;","import { useMemo, useRef } from 'react';\nimport hasClass from 'dom-helpers/hasClass';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Popover from './Popover'; // This is meant for internal use.\n// This applies a custom offset to the overlay if it's a popover.\n\nexport default function useOverlayOffset(customOffset) {\n  const overlayRef = useRef(null);\n  const popoverClass = useBootstrapPrefix(undefined, 'popover');\n  const offset = useMemo(() => ({\n    name: 'offset',\n    options: {\n      offset: () => {\n        if (overlayRef.current && hasClass(overlayRef.current, popoverClass)) {\n          return customOffset || Popover.POPPER_OFFSET;\n        }\n\n        return customOffset || [0, 0];\n      }\n    }\n  }), [customOffset, popoverClass]);\n  return [overlayRef, [offset]];\n}","import contains from 'dom-helpers/contains';\nimport * as React from 'react';\nimport { cloneElement, useCallback, useRef } from 'react';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport warning from 'warning';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Overlay from './Overlay';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction normalizeDelay(delay) {\n  return delay && typeof delay === 'object' ? delay : {\n    show: delay,\n    hide: delay\n  };\n} // Simple implementation of mouseEnter and mouseLeave.\n// React's built version is broken: https://github.com/facebook/react/issues/4251\n// for cases when the trigger is disabled and mouseOut/Over can cause flicker\n// moving from one child element to another.\n\n\nfunction handleMouseOverOut( // eslint-disable-next-line @typescript-eslint/no-shadow\nhandler, args, relatedNative) {\n  const [e] = args;\n  const target = e.currentTarget;\n  const related = e.relatedTarget || e.nativeEvent[relatedNative];\n\n  if ((!related || related !== target) && !contains(target, related)) {\n    handler(...args);\n  }\n}\n\nconst defaultProps = {\n  defaultShow: false,\n  trigger: ['hover', 'focus']\n};\n\nfunction OverlayTrigger({\n  trigger,\n  overlay,\n  children,\n  popperConfig = {},\n  show: propsShow,\n  defaultShow = false,\n  onToggle,\n  delay: propsDelay,\n  placement,\n  flip = placement && placement.indexOf('auto') !== -1,\n  ...props\n}) {\n  const triggerNodeRef = useRef(null);\n  const mergedRef = useMergedRefs(triggerNodeRef, children.ref);\n  const timeout = useTimeout();\n  const hoverStateRef = useRef('');\n  const [show, setShow] = useUncontrolledProp(propsShow, defaultShow, onToggle);\n  const delay = normalizeDelay(propsDelay);\n  const {\n    onFocus,\n    onBlur,\n    onClick\n  } = typeof children !== 'function' ? React.Children.only(children).props : {};\n\n  const attachRef = r => {\n    mergedRef(safeFindDOMNode(r));\n  };\n\n  const handleShow = useCallback(() => {\n    timeout.clear();\n    hoverStateRef.current = 'show';\n\n    if (!delay.show) {\n      setShow(true);\n      return;\n    }\n\n    timeout.set(() => {\n      if (hoverStateRef.current === 'show') setShow(true);\n    }, delay.show);\n  }, [delay.show, setShow, timeout]);\n  const handleHide = useCallback(() => {\n    timeout.clear();\n    hoverStateRef.current = 'hide';\n\n    if (!delay.hide) {\n      setShow(false);\n      return;\n    }\n\n    timeout.set(() => {\n      if (hoverStateRef.current === 'hide') setShow(false);\n    }, delay.hide);\n  }, [delay.hide, setShow, timeout]);\n  const handleFocus = useCallback((...args) => {\n    handleShow();\n    onFocus == null ? void 0 : onFocus(...args);\n  }, [handleShow, onFocus]);\n  const handleBlur = useCallback((...args) => {\n    handleHide();\n    onBlur == null ? void 0 : onBlur(...args);\n  }, [handleHide, onBlur]);\n  const handleClick = useCallback((...args) => {\n    setShow(!show);\n    onClick == null ? void 0 : onClick(...args);\n  }, [onClick, setShow, show]);\n  const handleMouseOver = useCallback((...args) => {\n    handleMouseOverOut(handleShow, args, 'fromElement');\n  }, [handleShow]);\n  const handleMouseOut = useCallback((...args) => {\n    handleMouseOverOut(handleHide, args, 'toElement');\n  }, [handleHide]);\n  const triggers = trigger == null ? [] : [].concat(trigger);\n  const triggerProps = {\n    ref: attachRef\n  };\n\n  if (triggers.indexOf('click') !== -1) {\n    triggerProps.onClick = handleClick;\n  }\n\n  if (triggers.indexOf('focus') !== -1) {\n    triggerProps.onFocus = handleFocus;\n    triggerProps.onBlur = handleBlur;\n  }\n\n  if (triggers.indexOf('hover') !== -1) {\n    process.env.NODE_ENV !== \"production\" ? warning(triggers.length > 1, '[react-bootstrap] Specifying only the `\"hover\"` trigger limits the visibility of the overlay to just mouse users. Consider also including the `\"focus\"` trigger so that touch and keyboard only users can see the overlay as well.') : void 0;\n    triggerProps.onMouseOver = handleMouseOver;\n    triggerProps.onMouseOut = handleMouseOut;\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [typeof children === 'function' ? children(triggerProps) : /*#__PURE__*/cloneElement(children, triggerProps), /*#__PURE__*/_jsx(Overlay, { ...props,\n      show: show,\n      onHide: handleHide,\n      flip: flip,\n      placement: placement,\n      popperConfig: popperConfig,\n      target: triggerNodeRef.current,\n      children: overlay\n    })]\n  });\n}\n\nOverlayTrigger.defaultProps = defaultProps;\nexport default OverlayTrigger;","// @flow\nimport React from 'react';\nimport { Row, Col, Card, Popover, Button, OverlayTrigger } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst Basic = () => {\n    const popover = (\n        <Popover id=\"popover-basic\">\n            <Popover.Header as=\"h3\">Popover right</Popover.Header>\n            <Popover.Body>And here's some amazing content. It's very engaging. Right?</Popover.Body>\n        </Popover>\n    );\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Simple Popover</h4>\n                <p className=\"text-muted font-14\">\n                    Popover is a component which displays a box with a content after a click on an element - similar to\n                    the tooltip but can contain more content.\n                </p>\n                <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\n                    <Button variant=\"danger\">Click me to see</Button>\n                </OverlayTrigger>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Direction = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Four Directions</h4>\n                <p className=\"text-muted font-14\">Four options are available: top, right, bottom, and left aligned.</p>\n\n                {['top', 'bottom', 'right', 'left'].map((placement) => (\n                    <OverlayTrigger\n                        trigger=\"click\"\n                        key={placement}\n                        placement={placement}\n                        overlay={\n                            <Popover popper id={`popover-positioned-${placement}`}>\n                                <Popover.Body>Vivamus sagittis lacus vel augue laoreet rutrum faucibus.</Popover.Body>\n                            </Popover>\n                        }>\n                        <Button variant=\"primary\" className=\"me-1\">\n                            Popover on {placement}\n                        </Button>\n                    </OverlayTrigger>\n                ))}\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst DimissibleOnClick = () => {\n    const popover = (\n        <Popover>\n            <Popover.Header as=\"h3\">Dismissible popover</Popover.Header>\n            <Popover.Body>And here's some amazing content. It's very engaging. Right?</Popover.Body>\n        </Popover>\n    );\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Dismiss on Next Click</h4>\n                <p className=\"text-muted font-14\">\n                    Use the <code>trigger</code> attribute with value <code>focus</code> to dismiss popovers on the\n                    user's next click of a different element than the toggle element.\n                </p>\n                <OverlayTrigger trigger=\"focus\" placement=\"right\" overlay={popover}>\n                    <Button variant=\"success\">Dismissible popover</Button>\n                </OverlayTrigger>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst DisabledPopover = () => {\n    const popover = (\n        <Popover>\n            <Popover.Body>Disabled popover</Popover.Body>\n        </Popover>\n    );\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Disabled Elements</h4>\n                <p className=\"text-muted font-14\">\n                    Elements with the <code>disabled</code> attribute aren’t interactive, meaning users cannot hover or\n                    click them to trigger a popover (or tooltip). As a workaround, you’ll want to trigger the popover\n                    from a wrapper <code>&lt;div&gt;</code> or <code>&lt;span&gt;</code> and override the{' '}\n                    <code>pointer-events</code> on the disabled element.\n                </p>\n                <OverlayTrigger placement=\"right\" overlay={popover}>\n                    <span className=\"d-inline-block\">\n                        <Button disabled style={{ pointerEvents: 'none' }}>\n                            Disabled button\n                        </Button>\n                    </span>\n                </OverlayTrigger>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst HoverPopover = () => {\n    const popover = (\n        <Popover id=\"popover-basic\">\n            <Popover.Header as=\"h3\">Ohh Wow !</Popover.Header>\n            <Popover.Body>And here's some amazing content. It's very engaging. Right?</Popover.Body>\n        </Popover>\n    );\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Hover</h4>\n                <p className=\"text-muted font-14\">\n                    Use the <code>trigger</code> attribute with value <code>hover</code> to show popover on hovering the\n                    element.\n                </p>\n                <OverlayTrigger trigger={['hover', 'focus']} placement=\"right\" overlay={popover}>\n                    <Button variant=\"dark\">Please Hover me</Button>\n                </OverlayTrigger>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Popovers = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/popovers' },\n                    { label: 'Popovers', path: '/ui/popovers', active: true },\n                ]}\n                title={'Popovers'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <Basic />\n                    <DimissibleOnClick />\n                    <HoverPopover />\n                </Col>\n                <Col xl={6}>\n                    <Direction />\n                    <DisabledPopover />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Popovers;\n"],"sourceRoot":""}