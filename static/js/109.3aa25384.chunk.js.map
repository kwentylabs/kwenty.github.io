{"version":3,"sources":["components/PageTitle.js","pages/maps/GoogleMaps.js"],"names":["PageTitle","props","className","title","BasicMap","Body","style","position","overflow","google","zoom","initialCenter","lat","lng","width","height","zoomControlOptions","maps","ControlPosition","LEFT_TOP","MapWithMarker","name","StreetViewMap","mapRef","map","ref","streetViewControl","onReady","mapObj","getStreetView","setPov","heading","pitch","setPosition","setVisible","activateStreetView","LightStyledMap","styles","featureType","elementType","stylers","color","lightness","weight","visibility","saturation","DarkStyledMap","GoogleApiWrapper","apiKey","breadCrumbItems","label","path","active","xl"],"mappings":"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","file":"static/js/109.3aa25384.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\ntype PageTitleProps = {\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst BasicMap = (props) => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Basic Google Map</h4>\n\n                <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={props.google}\n                        zoom={14}\n                        initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        zoomControlOptions={{\n                            position: props.google.maps.ControlPosition.LEFT_TOP,\n                        }}></Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst MapWithMarker = (props) => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Google Map with Marker</h4>\n                <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={props.google}\n                        zoom={18}\n                        initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        zoomControlOptions={{\n                            position: props.google.maps.ControlPosition.LEFT_TOP,\n                        }}>\n                        <Marker\n                            title={'This is sweet home.'}\n                            name={'Home sweet home!'}\n                            position={{ lat: 21.569874, lng: 71.5893798 }}></Marker>\n                    </Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst StreetViewMap = (props) => {\n    let mapRef = { map: {} };\n\n    /**\n     * Activate the street view\n     */\n    const activateStreetView = (position) => {\n        if (mapRef) {\n            const mapObj = mapRef.map.getStreetView();\n            mapObj.setPov({ heading: 34, pitch: 10 });\n            mapObj.setPosition(position);\n            mapObj.setVisible(true);\n        }\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Street View Panoramas Google Map</h4>\n\n                <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={props.google}\n                        ref={(map) => (mapRef = map)}\n                        zoom={14}\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        streetViewControl={true}\n                        onReady={() => {\n                            activateStreetView({ lat: 40.7295174, lng: -73.9986496 });\n                        }}></Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst LightStyledMap = (props) => {\n    const mapStyles = [\n        {\n            featureType: 'water',\n            elementType: 'geometry',\n            stylers: [{ color: '#e9e9e9' }, { lightness: 17 }],\n        },\n        {\n            featureType: 'landscape',\n            elementType: 'geometry',\n            stylers: [{ color: '#f5f5f5' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#ffffff' }, { lightness: 17 }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#ffffff' }, { lightness: 29 }, { weight: 0.2 }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'geometry',\n            stylers: [{ color: '#ffffff' }, { lightness: 18 }],\n        },\n        {\n            featureType: 'road.local',\n            elementType: 'geometry',\n            stylers: [{ color: '#ffffff' }, { lightness: 16 }],\n        },\n        {\n            featureType: 'poi',\n            elementType: 'geometry',\n            stylers: [{ color: '#f5f5f5' }, { lightness: 21 }],\n        },\n        {\n            featureType: 'poi.park',\n            elementType: 'geometry',\n            stylers: [{ color: '#dedede' }, { lightness: 21 }],\n        },\n        {\n            elementType: 'labels.text.stroke',\n            stylers: [{ visibility: 'on' }, { color: '#ffffff' }, { lightness: 16 }],\n        },\n        {\n            elementType: 'labels.text.fill',\n            stylers: [{ saturation: 36 }, { color: '#333333' }, { lightness: 40 }],\n        },\n        { elementType: 'labels.icon', stylers: [{ visibility: 'off' }] },\n        {\n            featureType: 'transit',\n            elementType: 'geometry',\n            stylers: [{ color: '#f2f2f2' }, { lightness: 19 }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#fefefe' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#fefefe' }, { lightness: 17 }, { weight: 1.2 }],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Ultra Light with Labels</h4>\n\n                <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={props.google}\n                        zoom={14}\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        styles={mapStyles}\n                        zoomControlOptions={{\n                            position: props.google.maps.ControlPosition.LEFT_TOP,\n                        }}></Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst DarkStyledMap = (props) => {\n    const mapStyles = [\n        {\n            featureType: 'all',\n            elementType: 'labels',\n            stylers: [{ visibility: 'on' }],\n        },\n        {\n            featureType: 'all',\n            elementType: 'labels.text.fill',\n            stylers: [{ saturation: 36 }, { color: '#000000' }, { lightness: 40 }],\n        },\n        {\n            featureType: 'all',\n            elementType: 'labels.text.stroke',\n            stylers: [{ visibility: 'on' }, { color: '#000000' }, { lightness: 16 }],\n        },\n        {\n            featureType: 'all',\n            elementType: 'labels.icon',\n            stylers: [{ visibility: 'off' }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#000000' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#000000' }, { lightness: 17 }, { weight: 1.2 }],\n        },\n        {\n            featureType: 'administrative.country',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#e5c163' }],\n        },\n        {\n            featureType: 'administrative.locality',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#c4c4c4' }],\n        },\n        {\n            featureType: 'administrative.neighborhood',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#e5c163' }],\n        },\n        {\n            featureType: 'landscape',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'poi',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 21 }, { visibility: 'on' }],\n        },\n        {\n            featureType: 'poi.business',\n            elementType: 'geometry',\n            stylers: [{ visibility: 'on' }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#e5c163' }, { lightness: '0' }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.stroke',\n            stylers: [{ visibility: 'off' }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#ffffff' }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'labels.text.stroke',\n            stylers: [{ color: '#e5c163' }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 18 }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#575757' }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#ffffff' }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'labels.text.stroke',\n            stylers: [{ color: '#2c2c2c' }],\n        },\n        {\n            featureType: 'road.local',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 16 }],\n        },\n        {\n            featureType: 'road.local',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#999999' }],\n        },\n        {\n            featureType: 'transit',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 19 }],\n        },\n        {\n            featureType: 'water',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 17 }],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Dark</h4>\n\n                <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={props.google}\n                        zoom={14}\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        styles={mapStyles}\n                        zoomControlOptions={{\n                            position: props.google.maps.ControlPosition.LEFT_TOP,\n                        }}></Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst GoogleMaps = (props) => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Maps', path: '/ui/googlemaps' },\n                    { label: 'Google Maps', path: '/ui/googlemaps', active: true },\n                ]}\n                title={'Google Maps'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <BasicMap google={props.google} />\n                </Col>\n\n                <Col xl={6}>\n                    <MapWithMarker google={props.google} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <StreetViewMap google={props.google} />\n                </Col>\n\n                <Col xl={6}>\n                    <LightStyledMap google={props.google} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <DarkStyledMap google={props.google} />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default (GoogleApiWrapper({\n    apiKey: 'AIzaSyDsucrEdmswqYrw0f6ej3bf4M4suDeRgNA',\n})(GoogleMaps): any);\n"],"sourceRoot":""}