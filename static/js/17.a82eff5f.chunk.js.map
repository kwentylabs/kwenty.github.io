{"version":3,"sources":["../node_modules/react-bootstrap/esm/Row.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js"],"names":["Row","React","ref","bsPrefix","className","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName","usePrevious","value","useRef","useEffect","current","dataAttr","property","dataProp","useWillUnmount","fn","onUnmount","valueRef","useUpdatedRef","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","hasClass","classList","contains","baseVal","indexOf","resolveContainerRef","document","_ref","canUseDOM","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","window","useWindow","useState","resolvedRef","setRef","earlyRef","nextRef","propTypes","PropTypes","string","onClick","func","variant","oneOf","CloseButton","type","defaultProps","ModalContext","onHide","OPEN_DATA_ATTRIBUTE","ModalManager","handleContainerOverflow","isRTL","this","modals","defaultView","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","_modal","containerState","style","overflow","paddingProp","container","getElement","scrollBarWidth","parseInt","css","setAttribute","m","remove","removeAttribute","Object","assign","modal","modalIdx","length","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","AbstractModalHeader","closeLabel","closeVariant","closeButton","children","context","useContext","handleClick","useEventCallback","_jsxs","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","undefined","add","marginProp","el","adjustAndStore","restore","getSharedManager","options","activeElement","doc","active","nodeName","e","manager","_excluded","useModalManager","provided","modalManager","getManager","dialog","backdrop","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","show","role","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","isMounted","useMounted","prevShow","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","tabIndex","appear","unmountOnExit","in","backdropElement","BackdropTransition","_Fragment","ReactDOM","createPortal","Manager","size","scrollbarSize","recalc","scrollDiv","createElement","position","top","width","height","appendChild","offsetWidth","removeChild","createWithBsPrefix","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalHeader","DivStyledAsH4","divWithClassName","animation","dialogAs","DialogTransition","Fade","timeout","dialogClassName","Dialog","ariaLabelledby","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","Provider","BaseModal","preventDefault","isAppearing","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"mappings":"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","file":"static/js/17.a82eff5f.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  var _ref;\n\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"sourceRoot":""}