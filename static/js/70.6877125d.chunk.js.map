{"version":3,"sources":["components/PageTitle.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/dom-helpers/esm/removeEventListener.js","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/types.js","../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/react-bootstrap/esm/DropdownButton.js","pages/uikit/Buttons.js"],"names":["PageTitle","props","className","listProps","Item","href","breadCrumbItems","map","item","index","active","label","path","title","React","p","ref","_jsx","classNames","context","displayName","window","document","createElement","Row","bsPrefix","as","Component","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","ownerDocument","node","BreadcrumbItem","children","linkAs","LinkComponent","Anchor","linkProps","target","prefix","undefined","defaultProps","Breadcrumb","Object","assign","CardImg","variant","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","listen","eventName","handler","options","addEventListener","removeEventListener","optionsSupported","onceSupported","passive","once","canUseDOM","e","capture","wrappedHandler","__once","onceHandler","event","this","call","alignDirection","PropTypes","oneOf","alignPropType","oneOfType","shape","sm","md","lg","xl","xxl","object","ButtonGroup","size","vertical","rest","baseClass","role","propTypes","id","string","onClick","func","isRequired","disabled","bool","align","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","DropdownButton","_jsxs","Dropdown","DropdownToggle","childBsPrefix","DropdownMenu","renderOnMount","buttons","name","color","DefaultButtons","button","OutlineButtons","RoundedButtons","OutlineRoundedButtons","ButtonSizes","DisabledButton","BlockButton","IconButtons","icons","type","ButtonGroups","eventKey","Buttons"],"mappings":"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","file":"static/js/70.6877125d.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Kwenty</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n}), PropTypes.object]);","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  vertical: false,\n  role: 'group'\n};\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, { ...rest,\n    ref: ref,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","// @flow\nimport React from 'react';\nimport { Row, Col, Card, Button, ButtonGroup, DropdownButton, Dropdown } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst buttons = [\n    {\n        name: 'Primary',\n        color: 'primary',\n    },\n    {\n        name: 'Secondary',\n        color: 'secondary',\n    },\n    {\n        name: 'Success',\n        color: 'success',\n    },\n    {\n        name: 'Danger',\n        color: 'danger',\n    },\n    {\n        name: 'Warning',\n        color: 'warning',\n    },\n    {\n        name: 'Info',\n        color: 'info',\n    },\n    {\n        name: 'Light',\n        color: 'light',\n    },\n    {\n        name: 'Dark',\n        color: 'dark',\n    },\n];\n\nconst DefaultButtons = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Default Buttons</h4>\n                <p className=\"text-muted font-14\">\n                    Use the button classes on an <code>&lt;a&gt;</code>, <code>&lt;button&gt;</code>, or{' '}\n                    <code>&lt;input&gt;</code> element.\n                </p>\n\n                <div className=\"button-list\">\n                    {buttons.map((button, index) => {\n                        return (\n                            <Button key={index} variant={button.color}>\n                                {button.name}\n                            </Button>\n                        );\n                    })}\n                    <Button variant=\"link\">Link</Button>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst OutlineButtons = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Button Outline</h4>\n                <p className=\"text-muted font-14\">\n                    Use a classes <code>.btn-outline-**</code> to quickly create a bordered buttons.\n                </p>\n\n                <div className=\"button-list\">\n                    {buttons.map((button, index) => {\n                        return (\n                            <Button key={index} variant={'outline-' + button.color}>\n                                {button.name}\n                            </Button>\n                        );\n                    })}\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst RoundedButtons = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Button-Rounded</h4>\n                <p className=\"text-muted font-14\">\n                    Add <code>.btn-rounded</code> to default button to get rounded corners.\n                </p>\n\n                <div className=\"button-list\">\n                    {buttons.map((button, index) => {\n                        return (\n                            <Button key={index} variant={button.color} className=\"btn-rounded\">\n                                {button.name}\n                            </Button>\n                        );\n                    })}\n                    <Button variant=\"link\" className=\"btn-rounded\">\n                        Link\n                    </Button>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst OutlineRoundedButtons = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Button Outline Rounded</h4>\n                <p className=\"text-muted font-14\">\n                    Use a classes <code>.btn-outline-**</code> to quickly create a bordered buttons.\n                </p>\n\n                <div className=\"button-list\">\n                    {buttons.map((button, index) => {\n                        return (\n                            <Button key={index} variant={'outline-' + button.color} className=\"btn-rounded\">\n                                {button.name}\n                            </Button>\n                        );\n                    })}\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst ButtonSizes = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Button-Sizes</h4>\n                <p className=\"text-muted font-14\">\n                    Add <code>.btn-lg</code>, <code>.btn-sm</code> for additional sizes.\n                </p>\n\n                <div className=\"button-list\">\n                    <Button size=\"lg\" variant=\"primary\">\n                        Large\n                    </Button>\n                    <Button variant=\"info\">Normal</Button>\n                    <Button size=\"sm\" variant=\"success\">\n                        Small\n                    </Button>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst DisabledButton = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Button-Disabled</h4>\n                <p className=\"text-muted font-14\">\n                    Add the <code>disabled</code> attribute to <code>&lt;button&gt;</code> buttons.\n                </p>\n\n                <div className=\"button-list\">\n                    <Button disabled variant=\"info\">\n                        Info\n                    </Button>\n                    <Button disabled variant=\"success\">\n                        Success\n                    </Button>\n                    <Button disabled variant=\"danger\">\n                        Danger\n                    </Button>\n                    <Button disabled variant=\"dark\">\n                        Dark\n                    </Button>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst BlockButton = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Block Level Buttons</h4>\n                <p className=\"text-muted font-14\">\n                    Create block level buttons by adding class <code>.d-grid</code> to parent div.\n                </p>\n\n                <div className=\"button-list\">\n                    <div className=\"d-grid\">\n                        <Button variant=\"primary\">Block Button</Button>\n                        <Button variant=\"info\">Block Button</Button>\n                        <Button variant=\"success\">Block Button</Button>\n                    </div>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst IconButtons = () => {\n    const icons = [\n        'mdi-heart-outline',\n        'mdi-window-close',\n        'mdi-music',\n        'mdi-star',\n        'mdi mdi-thumb-up-outline',\n        'mdi mdi-keyboard',\n        'mdi mdi-wrench',\n        'mdi-star-outline',\n        'mdi-heart',\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Icon Button</h4>\n                <p className=\"text-muted font-14\">Icon only button.</p>\n\n                <div className=\"button-list\">\n                    {buttons.map((button, index) => {\n                        return (\n                            <Button key={index} variant={button.color} className=\"btn-icon\">\n                                <i className={classNames('mdi', icons[index], 'ms-1', 'me-1')}></i>\n                            </Button>\n                        );\n                    })}\n\n                    <br />\n                    <Button type=\"button\" variant=\"light\">\n                        <i className=\"mdi mdi-heart me-1\"></i> <span>Like</span>\n                    </Button>\n                    <Button type=\"button\" variant=\"warning\">\n                        <i className=\"mdi mdi-rocket me-1\"></i> <span>Launch</span>\n                    </Button>\n                    <Button type=\"button\" variant=\"info\">\n                        <i className=\"mdi mdi-cloud me-1\"></i> <span>Cloud Hosting</span>\n                    </Button>\n\n                    <br />\n                    <Button type=\"button\" variant=\"outline-success\">\n                        <i className=\"uil-money-withdrawal\"></i> Money\n                    </Button>\n                    <Button type=\"button\" variant=\"outline-primary\">\n                        <i className=\"uil-paypal\"></i> PayPal\n                    </Button>\n                    <Button type=\"button\" variant=\"outline-danger\">\n                        <i className=\"uil-cog\"></i> Settings\n                    </Button>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst ButtonGroups = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Button Group</h4>\n                <p className=\"text-muted font-14\">\n                    Wrap a series of buttons with <code>.btn</code> in <code>.btn-group</code>.\n                </p>\n\n                <ButtonGroup className=\"mb-2\">\n                    <Button variant=\"light\">Left</Button>\n                    <Button variant=\"light\">Middle</Button>\n                    <Button variant=\"light\">Right</Button>\n                </ButtonGroup>\n\n                <br />\n\n                <ButtonGroup className=\"mb-2 me-1\">\n                    <Button variant=\"light\">1</Button>\n                    <Button variant=\"light\">2</Button>\n                    <Button variant=\"light\">3</Button>\n                    <Button variant=\"light\">4</Button>\n                </ButtonGroup>\n                <ButtonGroup className=\"mb-2 me-1\">\n                    <Button variant=\"light\">5</Button>\n                    <Button variant=\"light\">6</Button>\n                    <Button variant=\"light\">7</Button>\n                </ButtonGroup>\n                <ButtonGroup className=\"mb-2\">\n                    <Button variant=\"light\">8</Button>\n                </ButtonGroup>\n\n                <br />\n\n                <ButtonGroup className=\"mb-2\">\n                    <Button variant=\"light\">1</Button>\n                    <Button variant=\"primary\">2</Button>\n                    <Button variant=\"light\">3</Button>\n                    <DropdownButton as={ButtonGroup} title=\"Dropdown\" variant=\"light\">\n                        <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\n                    </DropdownButton>\n                </ButtonGroup>\n\n                <Row>\n                    <Col md={3}>\n                        <ButtonGroup vertical>\n                            <Button variant=\"light\">Top</Button>\n                            <Button variant=\"light\">Middle</Button>\n                            <Button variant=\"light\">Bottom</Button>\n                        </ButtonGroup>\n                    </Col>\n                    <Col md={3}>\n                        <ButtonGroup vertical>\n                            <Button variant=\"light\">Button 1</Button>\n                            <Button variant=\"light\">Button 2</Button>\n                            <DropdownButton as={ButtonGroup} title=\"Button 3\" variant=\"light\">\n                                <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\n                                <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\n                            </DropdownButton>\n                        </ButtonGroup>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Buttons = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/buttons' },\n                    { label: 'Buttons', path: '/ui/buttons', active: true },\n                ]}\n                title={'Buttons'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <DefaultButtons />\n                </Col>\n\n                <Col xl={6}>\n                    <RoundedButtons />\n                </Col>\n\n                <Col xl={6}>\n                    <OutlineButtons />\n                </Col>\n\n                <Col xl={6}>\n                    <OutlineRoundedButtons />\n                </Col>\n\n                <Col xl={6}>\n                    <ButtonSizes />\n                </Col>\n\n                <Col xl={6}>\n                    <DisabledButton />\n                </Col>\n\n                <Col xl={6}>\n                    <IconButtons />\n                </Col>\n\n                <Col xl={6}>\n                    <BlockButton />\n                </Col>\n\n                <Col xl={6}>\n                    <ButtonGroups />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Buttons;\n"],"sourceRoot":""}