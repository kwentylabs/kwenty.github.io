{"version":3,"sources":["../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js"],"names":["Row","React","ref","bsPrefix","className","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName","BreadcrumbItem","active","children","linkAs","LinkComponent","Anchor","linkProps","href","title","target","prefix","undefined","defaultProps","Breadcrumb","listProps","label","Object","assign","Item","dataAttr","property","dataProp","Context","createContext","canUseDOM","window","Provider","useWindow","useContext","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","Button","variant","size","useButtonProps","tagName","buttonProps","disabled","propTypes","PropTypes","string","onClick","func","oneOf","CloseButton","type","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","hasClass","classList","contains","baseVal","indexOf","resolveContainerRef","document","_ref","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","useState","resolvedRef","setRef","earlyRef","nextRef","ModalContext","onHide","OPEN_DATA_ATTRIBUTE","ModalManager","handleContainerOverflow","isRTL","this","modals","defaultView","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","_modal","containerState","style","overflow","paddingProp","container","getElement","scrollBarWidth","parseInt","css","setAttribute","m","remove","removeAttribute","modal","modalIdx","length","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","AbstractModalHeader","closeLabel","closeVariant","closeButton","context","handleClick","useEventCallback","_jsxs","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","add","marginProp","el","adjustAndStore","restore","getSharedManager","options","activeElement","doc","nodeName","e","manager","_excluded","useModalManager","provided","modalManager","getManager","dialog","backdrop","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","show","role","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","sourceKeys","keys","_objectWithoutPropertiesLoose","isMounted","useMounted","prevShow","usePrevious","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","tabIndex","appear","unmountOnExit","in","backdropElement","BackdropTransition","_Fragment","ReactDOM","createPortal","Manager","scrollbarSize","recalc","scrollDiv","createElement","position","top","width","height","appendChild","offsetWidth","removeChild","createWithBsPrefix","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalHeader","DivStyledAsH4","divWithClassName","animation","dialogAs","DialogTransition","Fade","timeout","dialogClassName","Dialog","ariaLabelledby","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","isAppearing","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"mappings":"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","file":"static/js/16.b93600a6.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\n\nexport default function useWindow() {\n  return useContext(Context);\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  var _ref;\n\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"sourceRoot":""}