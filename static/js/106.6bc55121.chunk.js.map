{"version":3,"sources":["components/PageTitle.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js","pages/uikit/Tooltips.js"],"names":["PageTitle","props","className","title","_excluded","useButtonProps","tagName","disabled","href","target","rel","onClick","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","undefined","role","onKeyDown","key","Button","React","_ref","ref","asProp","as","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","assign","buttonProps","Component","_jsx","displayName","bsPrefix","variant","size","active","prefix","useBootstrapPrefix","classNames","defaultProps","Basic","Body","placement","overlay","id","to","Direction","map","DisabledElements","style","pointerEvents","HtmlContent","Tooltips","breadCrumbItems","label","path","xl"],"mappings":"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","file":"static/js/106.6bc55121.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\ntype PageTitleProps = {\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n\n    if (disabled) {\n      href = undefined;\n    }\n  }\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","// @flow\nimport React from 'react';\nimport { Row, Col, Card, OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst Basic = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Examples</h4>\n                <p className=\"text-muted font-14\">Hover over the links below to see tooltips.</p>\n\n                <p className=\"muted mb-0\">\n                    Tight pants next level keffiyeh{' '}\n                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"overlay-example\"> Default title </Tooltip>}>\n                        <Link to=\"/\"> you probably </Link>\n                    </OverlayTrigger>{' '}\n                    haven't heard of them. Photo booth beard raw denim letterpress vegan messenger bag stumptown.\n                    Farm-to-table seitan, mcsweeney's fixie sustainable quinoa 8-bit american apparel\n                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"overlay-example\"> Another one </Tooltip>}>\n                        <Link to=\"/\"> have a </Link>\n                    </OverlayTrigger>{' '}\n                    terry richardson vinyl chambray. Beard stumptown, cardigans banh mi lomo thundercats. Tofu biodiesel\n                    williamsburg marfa, four loko mcsweeney's cleanse vegan chambray. A really ironic artisan\n                    <OverlayTrigger\n                        placement=\"top\"\n                        overlay={<Tooltip id=\"overlay-example\"> Another one here too </Tooltip>}>\n                        <Link to=\"/\"> whatever </Link>\n                    </OverlayTrigger>\n                    keytar, scenester farm-to-table banksy Austin\n                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"overlay-example\"> The last tip! </Tooltip>}>\n                        <Link to=\"/\"> twitter handle </Link>\n                    </OverlayTrigger>\n                    freegan cred raw denim single-origin coffee viral.\n                </p>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Direction = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Four Directions</h4>\n                <p className=\"text-muted font-14\">Four options are available: top, right, bottom, and left aligned.</p>\n\n                {['top', 'right', 'bottom', 'left'].map((placement) => (\n                    <OverlayTrigger\n                        key={placement}\n                        placement={placement}\n                        overlay={\n                            <Tooltip id={`tooltip-${placement}`}>\n                                Tooltip on <strong>{placement}</strong>.\n                            </Tooltip>\n                        }>\n                        <Button variant=\"info\" className=\"me-1\">\n                            Tooltip on {placement}\n                        </Button>\n                    </OverlayTrigger>\n                ))}\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst DisabledElements = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Disabled Elements</h4>\n                <p className=\"text-muted font-14\">\n                    Elements with the <code>disabled</code> attribute aren’t interactive, meaning users cannot hover or\n                    click them to trigger a popover (or tooltip). As a workaround, you’ll want to trigger the popover\n                    from a wrapper <code>&lt;div&gt;</code> or <code>&lt;span&gt;</code> and override the{' '}\n                    <code>pointer-events</code> on the disabled element.\n                </p>\n                <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Tooltip!</Tooltip>}>\n                    <span className=\"d-inline-block\">\n                        <Button disabled style={{ pointerEvents: 'none' }}>\n                            Disabled button\n                        </Button>\n                    </span>\n                </OverlayTrigger>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst HtmlContent = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Html Tags</h4>\n                <p className=\"text-muted font-14\">And with custom HTML added:</p>\n\n                <OverlayTrigger\n                    placement=\"top\"\n                    overlay={\n                        <Tooltip>\n                            <em>Tooltip</em> <u>with</u> <b>HTML</b>\n                        </Tooltip>\n                    }>\n                    <Button variant=\"secondary\">Tooltip with HTML</Button>\n                </OverlayTrigger>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Tooltips = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/tooltips' },\n                    { label: 'Tooltips', path: '/ui/tooltips', active: true },\n                ]}\n                title={'Tooltips'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <Basic />\n                    <DisabledElements />\n                </Col>\n                <Col xl={6}>\n                    <Direction />\n                    <HtmlContent />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Tooltips;\n"],"sourceRoot":""}